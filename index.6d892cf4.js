class t{constructor(t,e,i,s=1){this.r=t,this.g=e,this.b=i,this.a=s}static new(e,i,s,n=1){return new t(e,i,s,n)}static random(){return new t(Math.random(),Math.random(),Math.random())}static black(){return new t(0,0,0)}static white(){return new t(1,1,1)}static transparent(){return new t(0,0,0,0)}clone(){return new t(this.r,this.g,this.b,this.a)}add(e){return new t(this.r+e.r,this.g+e.g,this.b+e.b,this.a)}mix(e,i){return new t(this.r+(e.r-this.r)*i,this.g+(e.g-this.g)*i,this.b+(e.b-this.b)*i,this.a)}clamp(e=t.black(),i=t.white()){return new t(Math.max(e.r,Math.min(i.r,this.r)),Math.max(e.g,Math.min(i.g,this.g)),Math.max(e.b,Math.min(i.b,this.b)),Math.max(e.a,Math.min(i.a,this.a)))}}class e{constructor(t,e){this._x=t,this._y=e}get x(){return this._x}get y(){return this._y}static new(t,i){return new e(t,i)}static fromAngle(t){return new e(Math.cos(t),Math.sin(t))}static random(t,i){return new e(Math.random()*(i.x-t.x)+t.x,Math.random()*(i.y-t.y)+t.y)}add(t){return new e(this._x+t._x,this._y+t._y)}sub(t){return new e(this._x-t._x,this._y-t._y)}mul(t){return new e(this._x*t,this._y*t)}div(t){return new e(this._x/t,this._y/t)}dot(t){return this._x*t._x+this._y*t._y}lengthSquared(){return this.dot(this)}length(){return Math.sqrt(this.lengthSquared())}normalize(){return this.div(this.length())}angle(t){return void 0===t?Math.atan2(this._y,this._x):Math.acos(this.dot(t)/(this.length()*t.length()))}perpendicular(){return new e(-this._y,this._x)}apply(t){const i=t.elements,s=this._x,n=this._y;return new e(i[0]*s+i[3]*n+i[6],i[1]*s+i[4]*n+i[7])}clamp(t,i){return new e(Math.max(t.x,Math.min(i.x,this._x)),Math.max(t.y,Math.min(i.y,this._y)))}abs(){return new e(Math.abs(this._x),Math.abs(this._y))}max(t){return new e(Math.max(this._x,t._x),Math.max(this._y,t._y))}min(t){return new e(Math.min(this._x,t._x),Math.min(this._y,t._y))}reflect(t){return this.sub(t.mul(2*this.dot(t)))}mix(t,i){return new e(this._x*(1-i)+t._x*i,this._y*(1-i)+t._y*i)}}e.ZERO=new e(0,0);class i{constructor(...t){if(9!==t.length)throw new Error("Invalid Mat3 elements array size, must be 9");this.elements=new Float32Array(t)}static new(...t){return new i(...t)}static identity(){return new i(1,0,0,0,1,0,0,0,1)}static translation(t){return new i(1,0,0,0,1,0,t.x,t.y,1)}static rotation(t){const e=Math.cos(t),s=Math.sin(t);return new i(e,-s,0,s,e,0,0,0,1)}static scale(t){return t instanceof e?new i(t.x,0,0,0,t.y,0,0,0,1):new i(t,0,0,0,t,0,0,0,1)}clone(){return new i(...Array.from(this.elements))}mul(t){const e=this.elements,s=[0,0,0,0,0,0,0,0,0];if(t instanceof i){const i=t.elements;for(let t=0;t<3;t++)for(let n=0;n<3;n++)for(let r=0;r<3;r++)s[3*t+n]+=e[3*t+r]*i[3*r+n]}else for(let i=0;i<3;i++)for(let n=0;n<3;n++)s[3*i+n]=e[3*i+n]*t;return new i(...s)}det(){const t=this.elements;let e=0;return e+=t[0]*t[4]*t[8]+t[1]*t[5]*t[6]+t[2]*t[3]*t[7],e-=t[2]*t[4]*t[6]+t[1]*t[3]*t[8]+t[0]*t[5]*t[7],e}transpose(){const t=this.elements,e=[0,0,0,0,0,0,0,0,0];for(let i=0;i<3;i++)for(let s=0;s<3;s++)e[3*i+s]=t[3*s+i];return new i(...e)}adjunt(){const t=this.elements,e=[0,0,0,0,0,0,0,0,0];return e[0]=t[4]*t[8]-t[5]*t[7],e[1]=t[2]*t[7]-t[1]*t[8],e[2]=t[1]*t[5]-t[2]*t[4],e[3]=t[5]*t[6]-t[3]*t[8],e[4]=t[0]*t[8]-t[2]*t[6],e[5]=t[2]*t[3]-t[0]*t[5],e[6]=t[3]*t[7]-t[4]*t[6],e[7]=t[1]*t[6]-t[0]*t[7],e[8]=t[0]*t[4]-t[1]*t[3],new i(...e)}inverse(){const t=this.det();if(0===t)throw new Error("Can't find the inverse of the matrix because its determinant is zero");return this.adjunt().mul(1/t)}}class s{constructor(t,i,s,n){this._position=t,this.velocity=e.ZERO,this._zoom=i,this._width=s,this._height=n,this.updateMatrix()}get position(){return this._position}set position(t){this._position=t,this.updateMatrix()}get zoom(){return this._zoom}set zoom(t){this._zoom=t,this.updateMatrix()}set width(t){this._width=t,this.updateMatrix()}set height(t){this._height=t,this.updateMatrix()}get matrix(){return this._matrix.clone()}worldToScreen(t){return t.apply(this._matrix)}screenToWorld(t){return t.apply(this._matrix.inverse())}canvasToWorld(t){const i=e.new(t.x/this._width,-t.y/this._height).mul(2).add(e.new(-1,1));return this.screenToWorld(i)}updateMatrix(){const t=i.translation(this._position.mul(-1)),s=i.scale(e.new(this._zoom*this._height/this._width,this._zoom));this._matrix=t.mul(s)}}class n{constructor(t,e,i,s,n,r){this.start=t,this.end=e,this.thickness=i,this.color=s,this._startVelocity=n,this._endVelocity=r}interpolate(t){return new n(this.start.add(this._startVelocity.mul(t)),this.end.add(this._endVelocity.mul(t)),this.thickness,this.color,this._startVelocity,this._endVelocity)}}class r{constructor(t,e,i,s){this.center=t,this.size=e,this.color=i,this._velocity=s}interpolate(t){return new r(this.center.add(this._velocity.mul(t)),this.size,this.color,this._velocity)}}class o{constructor(t,e,i,s){this.center=t,this.radius=e,this.color=i,this._velocity=s}interpolate(t){return new o(this.center.add(this._velocity.mul(t)),this.radius,this.color,this._velocity)}}class a{constructor(t,e,i,s,n,r){this.start=t,this.end=e,this.thickness=i,this.color=s,this._startVelocity=n,this._endVelocity=r}interpolate(t){return new a(this.start.add(this._startVelocity.mul(t)),this.end.add(this._endVelocity.mul(t)),this.thickness,this.color,this._startVelocity,this._endVelocity)}}const h=new t(.3,.6,.9,1);class l extends class{constructor(t){this._commandQueue=null,this._canvas=t,this._camera=new s(e.ZERO,1,this._canvas.width,this._canvas.height),this._commandQueue=null,this.resize()}submit(t){this._commandQueue=t}flush(t){null!==this._commandQueue&&(this._commandQueue=this._commandQueue.interpolate(t),this.render())}get camera(){return this._camera}resize(){this._canvas.width=window.innerWidth,this._canvas.height=window.innerHeight,this._camera.width=this._canvas.width,this._camera.height=this._canvas.height}executeCommands(t){if(null!==this._commandQueue)for(const e of this._commandQueue)t(e)}}{constructor(t,e){super(t),this._gl=e,this._drawShader=new u(this._gl,"\n      attribute vec2 position;\n\n      uniform mat3 transform;\n\n      void main() {\n        vec3 position = transform * vec3(position, 1.0);\n        gl_Position = vec4(position.xy, 0.0, 1.0);\n      }\n    ","\n      precision mediump float;\n\n      uniform vec3 color;\n\n      void main() {\n        gl_FragColor = vec4(color, 1.0);\n      }\n    "),this._drawShaderPositionLocation=this._drawShader.getAttributeLocation("position"),this._drawShaderTransformLocation=this._drawShader.getUniformLocation("transform"),this._drawShaderColorLocation=this._drawShader.getUniformLocation("color");let i=[];this._circle=[0,66],i.push(0,0);for(let t=0;t<=64;t++){const e=2*Math.PI*t/64;i.push(Math.cos(e),Math.sin(e))}this._line=[i.length/2,4],i.push(-.05,0),i.push(-.05,1),i.push(.05,1),i.push(.05,0),this._box=[i.length/2,4],i.push(-1,-1),i.push(-1,1),i.push(1,1),i.push(1,-1),this._vertexBuffer=this._gl.createBuffer(),this._gl.bindBuffer(this._gl.ARRAY_BUFFER,this._vertexBuffer),this._gl.bufferData(this._gl.ARRAY_BUFFER,new Float32Array(i),this._gl.STATIC_DRAW)}render(){this._gl.viewport(0,0,this._canvas.width,this._canvas.height),this._gl.clearColor(h.r,h.g,h.b,1),this._gl.clear(this._gl.COLOR_BUFFER_BIT),this._drawShader.use(),this.executeCommands(this.executeCommand.bind(this))}executeCommand(t){if(t instanceof o){const e=i.scale(t.radius).mul(i.translation(t.center)).mul(this.camera.matrix);this._gl.uniformMatrix3fv(this._drawShaderTransformLocation,!1,e.elements),this._gl.uniform3f(this._drawShaderColorLocation,t.color.r,t.color.g,t.color.b),this._gl.enableVertexAttribArray(this._drawShaderPositionLocation),this._gl.vertexAttribPointer(this._drawShaderPositionLocation,2,this._gl.FLOAT,!1,0,0),this._gl.drawArrays(this._gl.TRIANGLE_FAN,this._circle[0],this._circle[1])}else if(t instanceof r){const e=i.scale(t.size).mul(i.translation(t.center)).mul(this.camera.matrix);this._gl.uniformMatrix3fv(this._drawShaderTransformLocation,!1,e.elements),this._gl.uniform3f(this._drawShaderColorLocation,t.color.r,t.color.g,t.color.b),this._gl.enableVertexAttribArray(this._drawShaderPositionLocation),this._gl.vertexAttribPointer(this._drawShaderPositionLocation,2,this._gl.FLOAT,!1,0,0),this._gl.drawArrays(this._gl.TRIANGLE_FAN,this._box[0],this._box[1])}else if(t instanceof a){const s=t.end.sub(t.start),n=i.translation(t.start),r=i.scale(e.new(t.thickness,s.length())),o=i.rotation(Math.PI/2-s.angle()),a=r.mul(o).mul(n).mul(this.camera.matrix);this._gl.uniformMatrix3fv(this._drawShaderTransformLocation,!1,a.elements),this._gl.uniform3f(this._drawShaderColorLocation,t.color.r,t.color.g,t.color.b),this._gl.enableVertexAttribArray(this._drawShaderPositionLocation),this._gl.vertexAttribPointer(this._drawShaderPositionLocation,2,this._gl.FLOAT,!1,0,0),this._gl.drawArrays(this._gl.TRIANGLE_FAN,this._line[0],this._line[1])}else if(t instanceof n){this._gl.enableVertexAttribArray(this._drawShaderPositionLocation),this._gl.vertexAttribPointer(this._drawShaderPositionLocation,2,this._gl.FLOAT,!1,0,0),this._gl.uniform3f(this._drawShaderColorLocation,t.color.r,t.color.g,t.color.b);const s=t.end.sub(t.start),n=i.translation(t.start),r=i.scale(e.new(t.thickness,s.length())),o=i.rotation(Math.PI/2-s.angle()),a=r.mul(o).mul(n).mul(this.camera.matrix);this._gl.uniformMatrix3fv(this._drawShaderTransformLocation,!1,a.elements),this._gl.drawArrays(this._gl.TRIANGLE_FAN,this._line[0],this._line[1]);const h=i.translation(t.end),l=i.scale(e.new(t.thickness,.5*t.thickness)),u=i.rotation(Math.PI/6-Math.PI/2-s.angle()),c=l.mul(u).mul(h).mul(this.camera.matrix),m=i.rotation(-Math.PI/6-Math.PI/2-s.angle()),_=l.mul(m).mul(h).mul(this.camera.matrix);this._gl.uniformMatrix3fv(this._drawShaderTransformLocation,!1,c.elements),this._gl.drawArrays(this._gl.TRIANGLE_FAN,this._line[0],this._line[1]),this._gl.uniformMatrix3fv(this._drawShaderTransformLocation,!1,_.elements),this._gl.drawArrays(this._gl.TRIANGLE_FAN,this._line[0],this._line[1])}}}class u{constructor(t,e,i){if(this._gl=t,this._vertexShader=this.createShader(this._gl.VERTEX_SHADER,e),this._fragmentShader=this.createShader(this._gl.FRAGMENT_SHADER,i),this._program=this._gl.createProgram(),this._gl.attachShader(this._program,this._vertexShader),this._gl.attachShader(this._program,this._fragmentShader),this._gl.linkProgram(this._program),!this._gl.getProgramParameter(this._program,this._gl.LINK_STATUS))throw new Error(`Shader linking failed: ${this._gl.getProgramInfoLog(this._program)}`)}use(){this._gl.useProgram(this._program)}getAttributeLocation(t){return this._gl.getAttribLocation(this._program,t)}getUniformLocation(t){const e=this._gl.getUniformLocation(this._program,t);if(null===e)throw new Error(`Shader uniform ${t} not found.`);return e}createShader(t,e){const i=this._gl.createShader(t);if(this._gl.shaderSource(i,e),this._gl.compileShader(i),!this._gl.getShaderParameter(i,this._gl.COMPILE_STATUS))throw new Error(`Shader compilation failed: ${this._gl.getShaderInfoLog(i)}`);return i}}class c{constructor(t){this._commands=[],this._time=t}interpolate(t){const e=new c(t);return e._commands=this._commands.map((e=>e.interpolate(t-this._time))),e}[Symbol.iterator](){return this._commands[Symbol.iterator]()}drawMovingBox(t,e,i,s){this._commands.push(new r(t,e,i,s))}drawMovingCircle(t,e,i,s){this._commands.push(new o(t,e,i,s))}drawMovingLine(t,e,i,s,n,r){this._commands.push(new a(t,e,i,s,n,r))}drawMovingArrow(t,e,i,s,r,o){this._commands.push(new n(t,e,i,s,r,o))}drawBox(t,i,s){this.drawMovingBox(t,i,s,e.ZERO)}drawCircle(t,i,s){this.drawMovingCircle(t,i,s,e.ZERO)}drawLine(t,i,s,n){this.drawMovingLine(t,i,s,n,e.ZERO,e.ZERO)}drawArrow(t,i,s,n){this.drawMovingArrow(t,i,s,n,e.ZERO,e.ZERO)}}class m{constructor(t){this._position=t}get position(){return this._position}set position(t){this._position=t}}class _ extends m{constructor(t,e){super(t),this._velocity=e}get velocity(){return this._velocity}set velocity(t){this._velocity=t}}class d extends m{constructor(t){super(t)}}class g{constructor(t,e,i,s){if(t>e)throw new Error("Genome creation failed: the minimum neuron count must be less than or equal to the maximum neuron count");if(i>s)throw new Error("Genome creation failed: the minimum connection count must be less than or equal to the maximum connection count");this._minNeuronCount=t,this._maxNeuronCount=e,this._minConnectionCount=i,this._maxConnectionCount=s}get minNeuronCount(){return this._minNeuronCount}get maxNeuronCount(){return this._maxNeuronCount}get minConnectionCount(){return this._minConnectionCount}get maxConnectionCount(){return this._maxConnectionCount}}class p{constructor(t,e,i){this._weight=p.normalizeWeight(t),this._source=e,this._target=e===i?e>0?e-1:1:i}update(t,e){e[this._target]+=t[this._source]*this._weight}get source(){return this._source}get target(){return this._target}get weight(){return this._weight}static random(t){return new p(Math.floor(65536*Math.random()),Math.floor(Math.random()*t),Math.floor(Math.random()*t))}static fromU32(t){return new p(p.normalizeWeight(t>>16),t>>8&255,255&t)}toU32(){return p.denormalizeWeight(this._weight)<<16|this._source<<8|this._target}static normalizeWeight(t){return((t=Math.min(Math.max(t,0),65535))/65535*2-1)*p.WeightAmplitude}static denormalizeWeight(t){return 65535*(t/this.WeightAmplitude+1)}}p.WeightAmplitude=10;class f{constructor(t,e,i){this._genome=t,this._neuronCount=e,this._connections=i}static random(t){let e=Math.round(Math.random()*(t.maxNeuronCount-t.minNeuronCount))+t.minNeuronCount,i=Math.round(Math.random()*(t.maxConnectionCount-t.minConnectionCount))+t.minConnectionCount,s=new Array(i).fill(null).map((()=>p.random(e)));return new f(t,e,s)}get genome(){return this._genome}get neuronCount(){return this._neuronCount}get connections(){return this._connections}mutate(t){let e=this.neuronCount;if(Math.random()<t){let t=Math.random()<.5?1:-1,i=this.neuronCount+t;i>=this.genome.minNeuronCount&&i<=this.genome.maxNeuronCount&&(e=i)}let i=this.connections.map((i=>Math.random()<t?p.random(e):Math.random()<t/this.connections.length?null:i.source<e&&i.target<e?i:null)).filter((t=>null!==t));return i.length<this.genome.maxConnectionCount&&Math.random()<t&&i.push(p.random(e)),new f(this._genome,e,i)}}class w{constructor(t,e){this._neurons=new Array(t).fill(0),this._swapNeurons=new Array(t).fill(0),this._connections=e,this._inputs=[],this._outputs=[]}set(t,e){this._neurons[t]=e}get(t){return this._neurons[t]}markInput(t){this._inputs.push(t)}markOutput(t){this._outputs.push(t)}reset(){this._neurons.fill(0)}update(){for(let t=0;t<this._connections.length;t++)this._connections[t].update(this._neurons,this._swapNeurons);for(let t=0;t<this._neurons.length;t++)this._neurons[t]=w.sigmoid(this._swapNeurons[t]),this._swapNeurons[t]=0}draw(i,s,n,r){const o=.5*r,a=.1*r,h=1*a;for(let r=0;r<this._connections.length;r++){const l=this._connections[r],u=s.add(e.new(Math.cos(l.source/this._neurons.length*Math.PI*2)*(o-a),Math.sin(l.source/this._neurons.length*Math.PI*2)*(o-a))),c=s.add(e.new(Math.cos(l.target/this._neurons.length*Math.PI*2)*(o-a),Math.sin(l.target/this._neurons.length*Math.PI*2)*(o-a))),m=l.weight>0?t.black().mix(t.new(1,0,0),l.weight/10):t.new(0,0,1).mix(t.black(),-l.weight/10);i.drawMovingArrow(u,c,h,m,n,n)}for(let r=0;r<this._neurons.length;r++){const h=s.add(e.new(Math.cos(r/this._neurons.length*Math.PI*2)*o,Math.sin(r/this._neurons.length*Math.PI*2)*o)),l=t.black().mix(t.white(),this._neurons[r]);let u;u=this._inputs.indexOf(r)>=0?t.new(0,1,0):this._outputs.indexOf(r)>=0?t.new(0,0,1):t.new(1,1,1),i.drawMovingCircle(h,a,u,n),i.drawMovingCircle(h,.9*a,l,n)}}static sigmoid(t){return 1/(1+Math.exp(-t))}}class v{constructor(t,e,i){if(e.length%2!=0)throw new Error("The number of genotypes in a population must be even.");this._genome=t,this._genotypes=e,this._mutationRate=i}static random(t,e,i){let s=new Array(e).fill(null).map((()=>f.random(t)));return new v(t,s,i)}get genotypes(){return this._genotypes}select(t){let e=t.map(((t,e)=>[t,e])).sort((([t,e],[i,s])=>i-t)),i=new Array(this._genotypes.length);for(let t=0;t<i.length/2;t++)i[2*t+0]=e[t][1],i[2*t+1]=e[t][1];return i}breed(t){let e=new Array(this._genotypes.length).fill(null).map(((e,i)=>this._genotypes[t[i]].mutate(this._mutationRate)));return new v(this._genome,e,this._mutationRate)}}class y{constructor(t,e){this.normal=t,this.penetration=e}}class b{constructor(t,e){this.position=t,this.radius=e}colliding(t){if(t instanceof b){const e=t.position.sub(this.position),i=e.lengthSquared(),s=this.radius+t.radius;if(i>s*s)return null;const n=e.normalize(),r=s-Math.sqrt(i);return new y(n,r)}{const e=t.colliding(this);return e?.normal.mul(-1),e}}}class C extends _{constructor(t,i,s,n,r){super(s,e.ZERO),this._genotype=i,this._nn=new w(i.neuronCount,i.connections);for(let e=0;e<t;e++)this._nn.markInput(e);this._nn.markOutput(t),this._nn.markOutput(t+1),this._forward=n.normalize(),this._color=r.clone(),this.fitness=0,this._eyes=[],1==t?this._eyes=[0]:2==t?this._eyes=[-Math.PI/4,Math.PI/4]:3==t&&(this._eyes=[-Math.PI/3,0,Math.PI/3])}static getNeuronCount(t,e){return t+e+2}update(t,e){for(let e=0;e<this._eyes.length;e++){const s=this._forward.apply(i.rotation(this._eyes[e])).normalize();let n=0;n=null===t?1/0:t.position.sub(this.position.add(s)).length(),this._nn.set(e,n)}this._nn.update();const s=this._nn.get(this._eyes.length)>this._nn.get(this._eyes.length+1)?-1:1;this._rotationVelocity=5*s,this._forward=this._forward.apply(i.rotation(this._rotationVelocity*e)),this.velocity=this._forward.mul(1)}get genotype(){return this._genotype}get nn(){return this._nn}get collider(){return new b(this.position,.05)}draw(e){for(let s=0;s<this._eyes.length;s++){const n=this._forward.apply(i.rotation(this._eyes[s])),r=this._forward.apply(i.rotation(this._eyes[s]-this._rotationVelocity)),o=this.position.add(n.mul(.1)),a=this.position.add(r.mul(.1)),h=this.velocity.add(a.sub(o));e.drawMovingLine(this.position,o,.2,this._color.mix(t.black(),.2),this.velocity,h),e.drawMovingCircle(o,.0125,this._color.mix(t.black(),.2),h)}e.drawMovingCircle(this.position,.05,this._color,this.velocity)}}C.Radius=.05;const x=t.new(.2,.9,.4);class M extends d{constructor(t){super(t)}get collider(){return new b(this.position,.02)}draw(t){t.drawCircle(this.position,.02,x)}}M.Radius=.02;class S{constructor(t){this._settings=t,this._genome=new g(C.getNeuronCount(t.eyeCount,t.minExtraNeuronCount),C.getNeuronCount(t.eyeCount,t.maxExtraNeuronCount),t.minConnectionCount,t.maxConnectionCount),this._population=v.random(this._genome,t.population,t.mutationRate),this._creatures=[],this._food=[],this.startRound()}startRound(){if(0!==this._creatures.length){let t=this._creatures.map((t=>t.fitness)),e=this._population.select(t);this._population=this._population.breed(e)}this._creatures=this._population.genotypes.map((e=>{let i=this.randomPosition(C.Radius),s=t.random();return new C(this._settings.eyeCount,e,i,i,s)})),this._food=[];for(let t=0;t<this._settings.initialFoodCount;t++)this._food.push(new M(this.randomPosition(M.Radius)));this._newFoodAccumulator=0,this._time=0}update(){if(0===this._food.length||this._time>this._settings.roundDuration){for(const t of this._creatures)t.velocity=e.ZERO;return!0}for(this._time+=.03333333333333333,this._newFoodAccumulator+=.03333333333333333*this._settings.newFoodRate;this._newFoodAccumulator>=1;)this._newFoodAccumulator-=1,this._food.push(new M(this.randomPosition(M.Radius)));return this._creatures.forEach((t=>t.update(this.getClosestFood(t.position),.03333333333333333))),this._creatures.forEach((t=>t.position=t.position.add(t.velocity.mul(.03333333333333333)))),this._creatures.forEach((t=>{t.position.lengthSquared()>(12-C.Radius)**2&&(t.position=t.position.normalize(),t.velocity=t.velocity.reflect(t.position),t.position=t.position.mul(12-C.Radius))})),this._creatures.forEach((t=>{for(let e=this._food.length-1;e>=0;e--)t.collider.colliding(this._food[e].collider)&&(t.fitness+=1,this._food.splice(e,1))})),!1}draw(i){i.drawCircle(e.ZERO,12.05,t.new(0,0,0)),i.drawCircle(e.ZERO,12,t.new(.3,.6,.9)),this._food.forEach((t=>t.draw(i))),this._creatures.forEach((t=>t.draw(i)))}pickCreature(t){for(const e of this._creatures)if(e.collider.colliding(new b(t,1e-5)))return e;return null}getBestCreature(){if(0===this._creatures.length)return null;let t=this._creatures[0];for(const e of this._creatures)e.fitness>t.fitness&&(t=e);return t}randomPosition(t){const i=Math.sqrt(Math.random()*(12-t)**2),s=Math.random()*Math.PI*2;return e.fromAngle(s).mul(i)}getClosestFood(t){let e=null,i=1/0;return this._food.forEach((s=>{const n=t.sub(s.position).length();n<i&&(e=s,i=n)})),e}}class E{constructor(t){this._element=t,this._onClick=new Set,this._element.addEventListener("click",(()=>{this._onClick.forEach((t=>t()))}))}static fromElement(t){return t instanceof HTMLButtonElement?new E(t):null}static fromSelector(t,e){const i=t.querySelector(e);return i?E.fromElement(i):null}addOnClickCallback(t){this._onClick.add(t)}removeOnClickCallback(t){this._onClick.delete(t)}clearOnClickCallbacks(){this._onClick.clear()}get element(){return this._element}}class A{constructor(t){this._element=t,this._display=this._element.querySelector("span")}static fromElement(t){return t.classList.contains("display")?new A(t):null}static fromSelector(t,e){const i=t.querySelector(e);return i&&i instanceof HTMLDivElement?A.fromElement(i):null}set value(t){this._display.innerText=t.toString()}get value(){return parseFloat(this._display.innerText)}set visible(t){this._element.classList.toggle("hidden",!t)}get visible(){return!this._element.classList.contains("hidden")}}class L{constructor(t){this._value=t,this._onValueChanged=new Set}get value(){return this._value}set value(t){const e=this.validate(t);e!==this._value&&(this._value=e,this.updateDisplay(),this._onValueChanged.forEach((t=>t(this._value))))}addOnValueChangedCallback(t){this._onValueChanged.add(t)}removeOnValueChangedCallback(t){this._onValueChanged.delete(t)}}class k extends L{constructor(t){let e=parseFloat(t.getAttribute("min")??"1");e!=e&&(e=1);let i=parseFloat(t.getAttribute("max")??"100");i!=i&&(i=100),[e,i]=[Math.min(e,i),Math.max(e,i)];let s=parseFloat(t.getAttribute("step")??"1");s!=s&&(s=1);const n=t.getAttribute("type")??"integer";if("integer"!=n)throw new Error(`Invalid range type: ${n}`);super([e,i]),this._min=e,this._max=i,this._step=s,this._type=n,this._mouseDown=null,this._track=t.querySelector("div"),this._leftThumbWrapper=this._track.querySelector("div.left"),this._leftThumb=this._leftThumbWrapper.querySelector("button"),this._leftThumb.addEventListener("mousedown",(()=>this._mouseDown="left")),this._rightThumbWrapper=this._track.querySelector("div.right"),this._rightThumb=this._rightThumbWrapper.querySelector("button"),this._rightThumb.addEventListener("mousedown",(()=>this._mouseDown="right")),document.addEventListener("mouseup",(()=>this._mouseDown=null)),document.addEventListener("mousemove",(t=>{if("left"===this._mouseDown){const e=this._track.getBoundingClientRect(),i=Math.max(0,Math.min(1,(t.clientX-e.left)/e.width));"integer"===this._type&&(this.value=[Math.min(Math.round(this._min+i*(this._max-this._min)),this.value[1]),this.value[1]])}else if("right"===this._mouseDown){const e=this._track.getBoundingClientRect(),i=Math.max(0,Math.min(1,(t.clientX-e.left)/e.width));"integer"===this._type&&(this.value=[this.value[0],Math.max(this.value[0],Math.round(this._min+i*(this._max-this._min)))])}})),this._display=t.querySelector("span#display"),this.updateDisplay()}static fromElement(t){return t instanceof HTMLDivElement&&t.classList.contains("range")?new k(t):null}static fromSelector(t,e){const i=t.querySelector(e);return i?k.fromElement(i):null}static fromChildren(t){return Array.from(t.children).map((t=>[t.id,k.fromElement(t)])).filter((([t,e])=>null!==e))}validate(t){return t=[Math.round(t[0]/this._step)*this._step,Math.round(t[1]/this._step)*this._step],"integer"===this._type&&(t=[Math.round(t[0]),Math.round(t[1])]),t=[Math.max(this._min,t[0]),Math.max(t[0],Math.min(this._max,t[1]))]}updateDisplay(){"integer"===this._type&&(this._display.innerText=this.value.join(" - "));let t=this.value.map((t=>(t-this._min)/(this._max-this._min)));this._leftThumbWrapper.style.transform=`translateX(${100*t[0]}%)`,this._rightThumbWrapper.style.transform=`translateX(${100*t[1]}%)`}}class T extends L{constructor(t){let e=parseFloat(t.getAttribute("min")??"1");e!=e&&(e=1);let i=parseFloat(t.getAttribute("max")??"100");i!=i&&(i=100),[e,i]=[Math.min(e,i),Math.max(e,i)];let s=parseFloat(t.getAttribute("step")??"1");s!=s&&(s=1);let n=parseFloat(t.getAttribute("initial")??"50");n!=n&&(n=50);let r=parseInt(t.getAttribute("digits")??"2");r>3&&(r=3);const o=t.getAttribute("type")??"linear";if("exponential"!=o&&"linear"!=o&&"integer"!=o)throw new Error(`Invalid slider type: ${o}`);if("exponential"===o&&e<=0)throw new Error("Exponential sliders must have a minimum value greater than 0.");super(n),this._min=e,this._max=i,this._step=s,this._digits=r,this._type=o,this._mouseDown=!1,this._track=t.querySelector("div"),this._thumbWrapper=this._track.querySelector("div"),this._thumb=this._thumbWrapper.querySelector("button"),this._thumb.addEventListener("mousedown",(()=>this._mouseDown=!0)),document.addEventListener("mouseup",(()=>this._mouseDown=!1)),document.addEventListener("mousemove",(t=>{if(this._mouseDown){const e=this._track.getBoundingClientRect(),i=Math.max(0,Math.min(1,(t.clientX-e.left)/e.width));"exponential"==this._type?this.value=this._min*Math.pow(10,i*Math.log10(this._max/this._min)):"linear"==this._type?this.value=this._min+i*(this._max-this._min):"integer"==this._type&&(this.value=Math.round(this._min+i*(this._max-this._min)))}})),this._input=t.querySelector("input"),this._input.setAttribute("min",this._min.toString()),this._input.setAttribute("min",this._max.toString()),this._input.setAttribute("step",this._step.toString()),this._input.addEventListener("change",(()=>this.value=this._input.valueAsNumber)),this.updateDisplay()}static fromElement(t){return t instanceof HTMLDivElement&&t.classList.contains("slider")?new T(t):null}static fromSelector(t,e){const i=t.querySelector(e);return i?T.fromElement(i):null}static fromChildren(t){return Array.from(t.children).map((t=>[t.id,T.fromElement(t)])).filter((([t,e])=>null!==e))}validate(t){return t="exponential"===this._type?Math.pow(10,Math.round(Math.log10(t)/this._step)*this._step):Math.round(t/this._step)*this._step,"integer"===this._type&&(t=Math.round(t)),Math.max(this._min,Math.min(this._max,t))}updateDisplay(){let t;t="exponential"===this._type?Math.log10(this.value/this._min)/Math.log10(this._max/this._min):(this.value-this._min)/(this._max-this._min),"integer"===this._type?this._input.valueAsNumber=this.value:this.value>Math.pow(10,-1-this._digits)&&this.value<Math.pow(10,6-this._digits)||0==this.value?this._input.value=this.value.toFixed(this._digits):0===this._digits?this._input.value=this.value.toExponential(0):this._input.value=this.value.toExponential(this._digits),this._thumbWrapper.style.transform=`translateX(${100*t}%)`}}class F extends L{constructor(t,e){super(e),this._button=t,this._button.addOnClickCallback((()=>this.value=!this.value)),this.updateDisplay()}static fromElement(t){if(!t.classList.contains("toggle"))return null;const e=E.fromElement(t);if(null==e)return null;const i=t.classList.contains("activated");return new F(e,i)}static fromSelector(t,e){const i=t.querySelector(e);return i?F.fromElement(i):null}static fromChildren(t){return Array.from(t.children).map((t=>[t.id,F.fromElement(t)])).filter((([t,e])=>null!==e))}validate(t){return t}updateDisplay(){this._button.element.classList.toggle("activated",this.value)}}class R extends L{constructor(t,e,i){if(super(e),0===t.size)throw new Error("A switch cannot be empty, toggles must be specified.");this._toggles=t,this._noneState=i,this._toggles.forEach(((t,e)=>{t.value=e===this.value,t.addOnValueChangedCallback((i=>{i?this.value=e:this.value===e&&void 0!==this._noneState?this.value=this._noneState:this.value===e&&(t.value=!0)}))}))}static fromElement(t){if(!(t instanceof HTMLDivElement&&t.classList.contains("switch")))return null;const e=F.fromChildren(t),i=t.getAttribute("none-state")??void 0,s=t.getAttribute("initial")??i;if(void 0===s)throw new Error("If no initial state is specified, none-state must be specified.");return new R(new Map(e),s,i)}static fromSelector(t,e){const i=t.querySelector(e);return i?R.fromElement(i):null}static fromChildren(t){return Array.from(t.children).filter((t=>t instanceof HTMLDivElement&&t.classList.contains("switch"))).map((t=>[t.id,R.fromElement(t)])).filter((([t,e])=>null!==e))}validate(t){return t}updateDisplay(){this._toggles.forEach(((t,e)=>t.value=e===this.value))}}class I{constructor(t,e){this._element=t,this._inputs=e,this._cancelButton=E.fromSelector(this._element,"button#cancel");const i=E.fromSelector(this._element,"button#submit");if(!i)throw new Error("Submit button not found on form.");this._submitButton=i,this._onCancelCallback=()=>{},this._onSubmitCallback=()=>{},this._cancelButton&&this._cancelButton.addOnClickCallback(this.cancel.bind(this)),this._submitButton.addOnClickCallback(this.submit.bind(this))}static fromElement(t){if(!(t instanceof HTMLDivElement&&t.classList.contains("form")))return null;const e=new Map;return k.fromChildren(t).forEach((([t,i])=>e.set(t,i))),T.fromChildren(t).forEach((([t,i])=>e.set(t,i))),R.fromChildren(t).forEach((([t,i])=>e.set(t,i))),F.fromChildren(t).forEach((([t,i])=>e.set(t,i))),new I(t,e)}static fromSelector(t){const e=document.querySelector("body>div#forms");if(!e)throw new Error("Couldn't find forms root element.");const i=e.querySelector(t);return i?I.fromElement(i):null}static fromChildren(t){return Array.from(t.children).map((t=>[t.id,I.fromElement(t)])).filter((t=>null!==t[1]))}setOnCancel(t){this._onCancelCallback=t}setOnSubmit(t){this._onSubmitCallback=t}get visible(){return!this._element.classList.contains("hidden")}set visible(t){this._element.classList.toggle("hidden",!t)}cancel(){this.visible=!1,this._onCancelCallback()}submit(){this.visible=!1,this._onSubmitCallback()}get(t){return this._inputs.get(t)??null}get inputs(){return this._inputs.entries()}}class O{constructor(t){this._forms=t,this._currentIndex=-1,this._onCancelCallback=()=>{},this._onSubmitCallback=()=>{};for(let t=0;t<this._forms.length;t++){const e=this._forms[t];e.setOnSubmit((()=>{t==this._forms.length-1?(this._currentIndex=-1,this._onSubmitCallback()):this._forms[t+1].visible=!0})),e.setOnCancel((()=>{0==t?(this._currentIndex=-1,this._onCancelCallback()):this._forms[t-1].visible=!0}))}}static fromElement(t){if(!(t instanceof HTMLDivElement&&t.classList.contains("form-chain")))return null;const e=I.fromChildren(t).map((([t,e])=>e));return 0===e.length?null:new O(e)}static fromSelector(t){const e=document.querySelector("body>div#forms");if(!e)throw new Error("Couldn't find forms root element.");const i=e.querySelector(t);return i?O.fromElement(i):null}get visible(){return-1!==this._currentIndex}skip(){-1!==this._currentIndex&&this._forms[this._currentIndex].submit()}set visible(t){t&&-1===this._currentIndex?(this._currentIndex=0,this._forms[this._currentIndex].visible=!0):t||-1===this._currentIndex||(this._forms[this._currentIndex].visible=!1,this._currentIndex=-1)}get(t){for(const e of this._forms){const i=e.get(t);if(null!==i)return i}return null}get inputs(){return this._forms.flatMap((t=>Array.from(t.inputs))).values()}setOnCancel(t){this._onCancelCallback=t}setOnSubmit(t){this._onSubmitCallback=t}}class P{constructor(t){this._element=t}static fromSelector(t){const e=document.querySelector(t);if(null===e)throw new Error("Loading screen element not found.");return new P(e)}get loading(){return"block"===this._element.style.display}set loading(t){this._element.style.display=t?"block":"none"}}class N{constructor(){this._stage=null,this.loadingScreen=P.fromSelector("div#loading");const t=document.getElementById("canvas");this._renderer=function(t){const e=t.getContext("webgl");if(null===e)throw new Error("WebGL is necessary but not supported.");return new l(t,e)}(t),window.addEventListener("resize",(()=>{this.loadingScreen.loading=!0,window.clearTimeout(this._resizeTimer),this._resizeTimer=window.setTimeout((()=>{this._renderer.resize(),this.loadingScreen.loading=!1}),250)})),this._lastMouse=null,this._selectedCreature=null,t.addEventListener("mousedown",(t=>{0===t.button&&(this._lastMouse=e.new(t.offsetX,t.offsetY),this._selectedCreature=this._stage?.pickCreature(this._renderer.camera.canvasToWorld(this._lastMouse))??null,null!==this._selectedCreature&&(this._lastMouse=null))})),t.addEventListener("mousemove",(t=>{if(null!==this._lastMouse){const i=e.new(t.offsetX,t.offsetY),s=i.sub(this._lastMouse);this._lastMouse=i;const n=e.new(-s.x,s.y).mul(.002/this._renderer.camera.zoom);this._renderer.camera.position=this._renderer.camera.position.add(n)}})),t.addEventListener("mouseup",(t=>{0===t.button&&(this._lastMouse=null)})),t.addEventListener("wheel",(t=>{const e=t.deltaY<0?.1:-.1;this._renderer.camera.zoom*=1+e})),this._bestButton=E.fromSelector(document.body,"button#bestButton"),this._bestButton.addOnClickCallback((()=>{null!==this._stage&&(this._selectedCreature=this._stage.getBestCreature())})),this._currentGeneration=A.fromSelector(document.body,"div#currentGeneration"),this._currentGeneration.value=1,this._fitness=A.fromSelector(document.body,"div#fitness"),this._fitness.visible=!1,this._fitness.value=0,this._simulationSpeed=T.fromSelector(document.body,"div#simulationSpeed"),this._fastForwardButton=E.fromSelector(document.body,"button#fastForwardButton"),this._fastForwardButton.addOnClickCallback((()=>{null!==this._stage&&window.setTimeout((()=>{for(;this._fastForward;);for(this._fastForward=!0;!this._stage.update(););this._currentGeneration.value+=1,this._stage.startRound(),this._selectedCreature=null,this._fastForward=!1}),50)})),this._fastForward=!1,this._fastForwardIcon=document.body.querySelector("i#fastForward"),this._fastForwardIcon.classList.toggle("hidden",!0),this._pauseIcon=document.body.querySelector("i#pause"),this._pauseIcon.classList.toggle("hidden",!0),this._helpButton=E.fromSelector(document.body,"button#helpButton"),this._helpButton.addOnClickCallback((()=>{window.open("https://riscadoa.com/portfolio/evolution-simulator/")}));const i=O.fromSelector("#introduction");i.visible=!0,i.setOnSubmit((()=>{const t={population:i.get("population").value,mutationRate:i.get("mutationRate").value,eyeCount:i.get("eyeCount").value,minExtraNeuronCount:i.get("extraNeuronCount").value[0],maxExtraNeuronCount:i.get("extraNeuronCount").value[1],minConnectionCount:i.get("connectionCount").value[0],maxConnectionCount:i.get("connectionCount").value[1],initialFoodCount:i.get("initialFoodCount").value,newFoodRate:i.get("newFoodRate").value,roundDuration:i.get("roundDuration").value};this._stage=new S(t),this._renderer.camera.position=e.ZERO,this._renderer.camera.zoom=.25}))}start(){this._lastTime=0,this._updateTimeAccumulator=0,this._simulationTime=0,this.loadingScreen.loading=!1,this._renderer.submit(new c(0)),requestAnimationFrame(this.onAnimationFrame.bind(this))}animate(t){if(this._fastForwardIcon.classList.toggle("hidden",!this._fastForward),null!==this._stage&&!this._fastForward)if(this._updateTimeAccumulator+=t*this._simulationSpeed.value,this._simulationTime+=t*this._simulationSpeed.value,this._updateTimeAccumulator>=.03333333333333333){let t=new c(this._simulationTime);this._stage.draw(t),this._selectedCreature?(this._renderer.camera.position=this._selectedCreature.position,this._renderer.camera.velocity=this._selectedCreature.velocity,this._selectedCreature.nn.draw(t,this._selectedCreature.position.add(e.new(0,-.5)),this._selectedCreature.velocity,.5)):this._renderer.camera.velocity=e.ZERO,this._renderer.submit(t);for(let t=0;t<5&&this._updateTimeAccumulator>=.03333333333333333;t++)this._stage.update()&&(this._currentGeneration.value+=1,this._stage.startRound()),this._updateTimeAccumulator-=.03333333333333333;this._updateTimeAccumulator=0,this._fitness.visible=null!==this._selectedCreature,this._selectedCreature&&(this._fitness.value=this._selectedCreature.fitness)}else this._renderer.camera.position=this._renderer.camera.position.add(this._renderer.camera.velocity.mul(t*this._simulationSpeed.value));this._renderer.flush(this._simulationTime)}onAnimationFrame(t){const e=t-this._lastTime;this._lastTime=t,this.loadingScreen.loading||this.animate(.001*e),requestAnimationFrame(this.onAnimationFrame.bind(this))}}document.addEventListener("DOMContentLoaded",(()=>{(new N).start()}));
//# sourceMappingURL=index.6d892cf4.js.map
