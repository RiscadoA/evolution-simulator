{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-1d7f124ee0848c01.js","src/main.ts","src/app/app.ts","src/app/gl/index.ts","src/app/gl/renderer.ts","src/app/math/index.ts","src/app/math/color.ts","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","src/app/math/mat3.ts","src/app/math/vec2.ts","src/app/gl/camera.ts","src/app/gl/webgl-renderer.ts","src/app/gl/draw-arrow.ts","src/app/gl/draw-box.ts","src/app/gl/draw-circle.ts","src/app/gl/draw-line.ts","src/app/gl/command-queue.ts","src/app/sim/index.ts","src/app/sim/body.ts","src/app/sim/creature.ts","src/app/evo/index.ts","src/app/evo/genome.ts","src/app/evo/genotype.ts","src/app/evo/connection.ts","src/app/evo/network.ts","src/app/evo/population.ts","src/app/sim/collider.ts","src/app/sim/food.ts","src/app/sim/stage.ts","src/app/ui/index.ts","src/app/ui/button.ts","src/app/ui/display.ts","src/app/ui/form.ts","src/app/ui/range.ts","src/app/ui/input.ts","src/app/ui/slider.ts","src/app/ui/switch.ts","src/app/ui/toggle.ts","src/app/ui/form-chain.ts","src/app/ui/loading-screen.ts"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"4a236f9275d0a351\";module.bundle.HMR_BUNDLE_ID = \"3a6cf3c0e7f05703\";\"use strict\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: mixed;\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function accept(fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function dispose(fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData = undefined;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, acceptedAssets\n/*: {|[string]: boolean|} */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // $FlowFixMe\n\n  ws.onmessage = function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    acceptedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n\n      var assets = data.assets.filter(function (asset) {\n        return asset.envHash === HMR_ENV_HASH;\n      }); // Handle HMR Update\n\n      var handled = assets.every(function (asset) {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear();\n        assets.forEach(function (asset) {\n          hmrApply(module.bundle.root, asset);\n        });\n\n        for (var i = 0; i < assetsToAccept.length; i++) {\n          var id = assetsToAccept[i][1];\n\n          if (!acceptedAssets[id]) {\n            hmrAcceptRun(assetsToAccept[i][0], id);\n          }\n        }\n      } else {\n        window.location.reload();\n      }\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      var _iterator = _createForOfIteratorHelper(data.diagnostics.ansi),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var ansiDiagnostic = _step.value;\n          var stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n          console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  var errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  var _iterator2 = _createForOfIteratorHelper(diagnostics),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var diagnostic = _step2.value;\n      var stack = diagnostic.codeframe ? diagnostic.codeframe : diagnostic.stack;\n      errorHTML += \"\\n      <div>\\n        <div style=\\\"font-size: 18px; font-weight: bold; margin-top: 20px;\\\">\\n          \\uD83D\\uDEA8 \".concat(diagnostic.message, \"\\n        </div>\\n        <pre>\").concat(stack, \"</pre>\\n        <div>\\n          \").concat(diagnostic.hints.map(function (hint) {\n        return '<div>💡 ' + hint + '</div>';\n      }).join(''), \"\\n        </div>\\n        \").concat(diagnostic.documentation ? \"<div>\\uD83D\\uDCDD <a style=\\\"color: violet\\\" href=\\\"\".concat(diagnostic.documentation, \"\\\" target=\\\"_blank\\\">Learn more</a></div>\") : '', \"\\n      </div>\\n    \");\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(window.location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    var deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n    if (deps) {\n      var fn = new Function('require', 'module', 'exports', asset.output);\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return true;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  var parents = getParents(module.bundle.root, id); // If no parents, the asset is new. Prevent reloading the page.\n\n  if (!parents.length) {\n    return true;\n  }\n\n  return parents.some(function (v) {\n    return hmrAcceptCheck(v[0], v[1], null);\n  });\n}\n\nfunction hmrAcceptRun(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n  cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n\n  acceptedAssets[id] = true;\n}","import {App} from './app/app';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const app = new App();\n  app.start();\n});\n","import * as GL from './gl';\nimport {Vec2} from './math';\nimport * as Sim from './sim';\nimport * as UI from './ui';\n\n/** The movement speed of the camera. */\nconst CAMERA_MOVEMENT_SPEED = 0.002;\n\n/** The zoom speed of the camera. */\nconst CAMERA_ZOOM_SPEED = 0.1;\n\n/** Maximum number of skipped frames. */\nconst MAX_SKIP = 5;\n\n/** Help page URL. */\nconst HELP_URL = 'https://riscadoa.com/portfolio/evolution-simulator/';\n\n/**\n * Manages all the application state.\n */\nexport class App {\n  /** Renderer used to draw. */\n  private _renderer: GL.Renderer;\n\n  /** Loading screen. */\n  private loadingScreen: UI.LoadingScreen;\n\n  /** Resize timer. */\n  private _resizeTimer: number;\n\n  /** Last update time. */\n  private _lastTime: number;\n\n  /** The simulation time. */\n  private _simulationTime: number;\n\n  /** Update time accumulator. */\n  private _updateTimeAccumulator: number;\n\n  /** Last mouse position. */\n  private _lastMouse: Vec2|null;\n\n  /** The currently selected creature. */\n  private _selectedCreature: Sim.Creature|null;\n\n  /** The simulation stage. */\n  private _stage: Sim.Stage|null;\n\n  /** The simulation speed. */\n  private _simulationSpeed: UI.Slider;\n\n  /** The best creature button. */\n  private _bestButton: UI.Button;\n\n  /** The fast forward button. */\n  private _fastForwardButton: UI.Button;\n\n  /** The help button. */\n  private _helpButton: UI.Button;\n\n  /** The current generation display. */\n  private _currentGeneration: UI.Display;\n\n  /** The fitness display. */\n  private _fitness: UI.Display;\n\n  /** The fast forward icon. */\n  private _fastForwardIcon: HTMLElement;\n\n  /** The pause icon. */\n  private _pauseIcon: HTMLElement;\n\n  /** Is fast forward enabled? */\n  private _fastForward: boolean;\n\n  // Default constructor.\n  public constructor() {\n    this._stage = null;\n\n    // Initialize the loading screen.\n    this.loadingScreen = UI.LoadingScreen.fromSelector('div#loading');\n\n    // Initialize the renderer.\n    const canvas = document.getElementById('canvas') as HTMLCanvasElement;\n    this._renderer = GL.createRenderer(canvas);\n\n    // Initialize the resize callback.\n    window.addEventListener('resize', () => {\n      this.loadingScreen.loading = true;\n      window.clearTimeout(this._resizeTimer);\n      this._resizeTimer = window.setTimeout(() => {\n        this._renderer.resize();\n        this.loadingScreen.loading = false;\n      }, 250);\n    });\n\n    // Initialize the mouse input callbacks.\n    this._lastMouse = null;\n    this._selectedCreature = null;\n    canvas.addEventListener('mousedown', (e) => {\n      if (e.button !== 0) return;\n      this._lastMouse = Vec2.new(e.offsetX, e.offsetY);\n      this._selectedCreature = this._stage?.pickCreature(this._renderer.camera.canvasToWorld(this._lastMouse)) ?? null;\n      if (this._selectedCreature !== null) this._lastMouse = null;\n    });\n    canvas.addEventListener('mousemove', (e) => {\n      if (this._lastMouse !== null) {\n        const mouse = Vec2.new(e.offsetX, e.offsetY);\n        const delta = mouse.sub(this._lastMouse);\n        this._lastMouse = mouse;\n\n        // Update the camera.\n        const movement = Vec2.new(-delta.x, delta.y).mul(CAMERA_MOVEMENT_SPEED / this._renderer.camera.zoom);\n        this._renderer.camera.position = this._renderer.camera.position.add(movement);\n      }\n    });\n    canvas.addEventListener('mouseup', e => {\n      if (e.button !== 0) return;\n      this._lastMouse = null;\n    });\n    canvas.addEventListener('wheel', (e) => {\n      const delta = e.deltaY;\n      const zoom = delta < 0 ? CAMERA_ZOOM_SPEED : -CAMERA_ZOOM_SPEED;\n      this._renderer.camera.zoom *= 1 + zoom;\n    });\n\n    // Initialize overlay.\n    this._bestButton = UI.Button.fromSelector(document.body, 'button#bestButton')!;\n    this._bestButton.addOnClickCallback(() => {\n      if (this._stage !== null) this._selectedCreature = this._stage.getBestCreature();\n    });\n    this._currentGeneration = UI.Display.fromSelector(document.body, 'div#currentGeneration')!;\n    this._currentGeneration.value = 1;\n    this._fitness = UI.Display.fromSelector(document.body, 'div#fitness')!;\n    this._fitness.visible = false;\n    this._fitness.value = 0;\n    this._simulationSpeed = UI.Slider.fromSelector(document.body, 'div#simulationSpeed')!;\n    this._fastForwardButton = UI.Button.fromSelector(document.body, 'button#fastForwardButton')!;\n    this._fastForwardButton.addOnClickCallback(() => {\n      if (this._stage !== null) {\n        window.setTimeout(() => {\n          while (this._fastForward)\n            ;\n          this._fastForward = true;\n          while (!this._stage!.update())\n            ;\n          this._currentGeneration.value += 1;\n          this._stage!.startRound();\n          this._selectedCreature = null;\n          this._fastForward = false;\n        }, 50);\n      }\n    });\n    this._fastForward = false;\n    this._fastForwardIcon = document.body.querySelector('i#fastForward')!;\n    this._fastForwardIcon.classList.toggle('hidden', true);\n    this._pauseIcon = document.body.querySelector('i#pause')!;\n    this._pauseIcon.classList.toggle('hidden', true);\n    this._helpButton = UI.Button.fromSelector(document.body, 'button#helpButton')!;\n    this._helpButton.addOnClickCallback(() => {\n      window.open(HELP_URL);\n    });\n\n    // Create introduction form.\n    const intro = UI.FormChain.fromSelector('#introduction')!;\n    intro.visible = true;\n    intro.setOnSubmit(() => {\n      // Get parameters from the form.\n      const params: Sim.StageSettings = {\n        population: intro.get<number>('population')!.value,\n        mutationRate: intro.get<number>('mutationRate')!.value,\n        eyeCount: intro.get<number>('eyeCount')!.value,\n        minExtraNeuronCount: intro.get<[number, number]>('extraNeuronCount')!.value[0],\n        maxExtraNeuronCount: intro.get<[number, number]>('extraNeuronCount')!.value[1],\n        minConnectionCount: intro.get<[number, number]>('connectionCount')!.value[0],\n        maxConnectionCount: intro.get<[number, number]>('connectionCount')!.value[1],\n        initialFoodCount: intro.get<number>('initialFoodCount')!.value,\n        newFoodRate: intro.get<number>('newFoodRate')!.value,\n        roundDuration: intro.get<number>('roundDuration')!.value,\n      };\n\n      // Create the stage.\n      this._stage = new Sim.Stage(params);\n\n      // Reset the view.\n      this._renderer.camera.position = Vec2.ZERO;\n      this._renderer.camera.zoom = 0.25;\n    });\n  }\n\n  /**\n   * Starts the application.\n   */\n  public start(): void {\n    // Initialize the time step timer.\n    this._lastTime = 0.0;\n    this._updateTimeAccumulator = 0.0;\n    this._simulationTime = 0.0;\n    this.loadingScreen.loading = false;\n    this._renderer.submit(new GL.CommandQueue(0.0));\n    requestAnimationFrame(this.onAnimationFrame.bind(this));\n  }\n\n  /**\n   * Animates the application.\n   * @param dt Delta time in seconds.\n   */\n  private animate(dt: number): void {\n    this._fastForwardIcon.classList.toggle('hidden', !this._fastForward);\n\n    // Update and draw the stage.\n    if (this._stage !== null && !this._fastForward) {\n      this._updateTimeAccumulator += dt * this._simulationSpeed.value;\n      this._simulationTime += dt * this._simulationSpeed.value;\n      if (this._updateTimeAccumulator >= Sim.TIME_STEP) {\n        // Generate the draw command queue.\n        let queue = new GL.CommandQueue(this._simulationTime);\n        this._stage.draw(queue);\n        if (this._selectedCreature) {\n          this._renderer.camera.position = this._selectedCreature.position;\n          this._renderer.camera.velocity = this._selectedCreature.velocity;\n          this._selectedCreature.nn.draw(\n              queue, this._selectedCreature.position.add(Vec2.new(0, -0.5)), this._selectedCreature.velocity, 0.5);\n        } else\n          this._renderer.camera.velocity = Vec2.ZERO;\n        this._renderer.submit(queue);\n\n        // Update the stage.\n        for (let i = 0; i < MAX_SKIP && this._updateTimeAccumulator >= Sim.TIME_STEP; i++) {\n          if (this._stage.update()) {\n            this._currentGeneration.value += 1;\n            this._stage.startRound();\n          }\n          this._updateTimeAccumulator -= Sim.TIME_STEP;\n        }\n        this._updateTimeAccumulator = 0.0;\n\n        // Update the UI.\n        this._fitness.visible = this._selectedCreature !== null;\n        if (this._selectedCreature) this._fitness.value = this._selectedCreature.fitness;\n      } else {\n        this._renderer.camera.position =\n            this._renderer.camera.position.add(this._renderer.camera.velocity.mul(dt * this._simulationSpeed.value));\n      }\n    }\n\n    // Flush the renderer.\n    this._renderer.flush(this._simulationTime);\n  }\n\n  /**\n   * Called when the round ends.\n   * @param time Time in milliseconds since the beginning of the application.\n   */\n  private onAnimationFrame(time: number): void {\n    // Calculate the delta time in seconds.\n    const dt = (time - this._lastTime);\n    this._lastTime = time;\n\n    // Animate the application.\n    if (!this.loadingScreen.loading) this.animate(dt * 0.001);\n    requestAnimationFrame(this.onAnimationFrame.bind(this));\n  }\n}","import {Renderer} from './renderer';\nimport {WebGLRenderer} from './webgl-renderer';\n\nexport {Camera} from './camera';\nexport {CommandQueue} from './command-queue';\nexport {Renderer};\n\n/**\n * Creates a new renderer.\n * @param canvas The canvas element.\n */\nexport function createRenderer(canvas: HTMLCanvasElement): Renderer {\n  const gl = canvas.getContext('webgl');\n  if (gl === null) throw new Error('WebGL is necessary but not supported.');\n  return new WebGLRenderer(canvas, gl);\n}","import {Color, Vec2} from '../math';\n\nimport {Camera} from './camera';\nimport {Command} from './command';\nimport {CommandQueue} from './command-queue';\n\n/**\n * Class used to draw stuff on the canvas.\n */\nexport abstract class Renderer {\n  /** The canvas element. */\n  protected _canvas: HTMLCanvasElement;\n\n  /** The camera used to render. */\n  private _camera: Camera;\n\n  /** The last command queue. */\n  private _commandQueue: CommandQueue|null = null;\n\n  /**\n   * @param canvas The canvas element.\n   */\n  public constructor(canvas: HTMLCanvasElement) {\n    this._canvas = canvas;\n    this._camera = new Camera(Vec2.ZERO, 1, this._canvas.width, this._canvas.height);\n    this._commandQueue = null;\n    this.resize();\n  }\n\n  /**\n   * Submits a new command queue to be drawn.\n   * @param queue The command queue to be drawn.\n   */\n  public submit(queue: CommandQueue): void {\n    this._commandQueue = queue;\n  }\n\n  /**\n   * Flushes the draw commands queue.\n   * @param time The current time.\n   */\n  public flush(time: number): void {\n    if (this._commandQueue === null) {\n      return;\n    }\n\n    // Interpolate the queue.\n    this._commandQueue = this._commandQueue.interpolate(time);\n\n    // Render the queue.\n    this.render();\n  }\n\n  /**\n   * Gets the camera used to render.\n   */\n  public get camera(): Camera {\n    return this._camera;\n  }\n\n  /**\n   * Should be called when the window is resized.\n   */\n  public resize(): void {\n    // Update the canvas size to match the window size.\n    this._canvas.width = window.innerWidth;\n    this._canvas.height = window.innerHeight;\n\n    // Update the camera's canvas size.\n    this._camera.width = this._canvas.width;\n    this._camera.height = this._canvas.height;\n  }\n\n  /**\n   * Renders the current frame.\n   */\n  protected abstract render(): void;\n\n  /**\n   * Executes all the draw commands.\n   * @param method The method used to draw the commands.\n   */\n  protected executeCommands(method: (command: Command) => void): void {\n    if (this._commandQueue === null) return;\n    for (const command of this._commandQueue) {\n      method(command);\n    }\n  }\n}\n","export {Color} from './color';\nexport {Mat3} from './mat3';\nexport {Vec2} from './vec2';\n","/**\n * Represents a color.\n */\nexport class Color {\n  /** The red component. */\n  public r: number;\n\n  /** The green component. */\n  public g: number;\n\n  /** The blue component. */\n  public b: number;\n\n  /** The alpha component. */\n  public a: number;\n\n  /**\n   * @param r The red component.\n   * @param g The green component.\n   * @param b The blue component.\n   * @param a The alpha component.\n   */\n  public constructor(r: number, g: number, b: number, a: number = 1) {\n    this.r = r;\n    this.g = g;\n    this.b = b;\n    this.a = a;\n  }\n\n  /**\n   * Creates a new color from the given RGBA values.\n   * @param r The red component.\n   * @param g The green component.\n   * @param b The blue component.\n   * @param a The alpha component.\n   * @returns The new color.\n   */\n  public static new(r: number, g: number, b: number, a: number = 1): Color {\n    return new Color(r, g, b, a);\n  }\n\n  /**\n   * Creates a random color (fixed alpha).\n   * @returns The new color.\n   */\n  public static random(): Color {\n    return new Color(Math.random(), Math.random(), Math.random());\n  }\n\n  /**\n   * Returns the black color.\n   * @returns The black color.\n   */\n  public static black(): Color {\n    return new Color(0, 0, 0);\n  }\n\n  /**\n   * Returns the white color.\n   * @returns The white color.\n   */\n  public static white(): Color {\n    return new Color(1, 1, 1);\n  }\n\n  /**\n   * Returns the transparent color.\n   * @returns The transparent color.\n   */\n  public static transparent(): Color {\n    return new Color(0, 0, 0, 0);\n  }\n\n  /**\n   * Clones the color and returns the result.\n   * @returns The cloned color.\n   */\n  public clone(): Color {\n    return new Color(this.r, this.g, this.b, this.a);\n  }\n\n  /**\n   * Adds the given color to this color and returns the result (fixed alpha).\n   * @param other The color to add.\n   * @returns The result.\n   */\n  public add(other: Color): Color {\n    return new Color(this.r + other.r, this.g + other.g, this.b + other.b, this.a);\n  }\n\n  /**\n   * Mixes the color with the given color and returns the result (fixed alpha).\n   * @param min The minimum value.\n   * @param max The maximum value.\n   * @param delta The delta value.\n   * @returns The mixed color.\n   */\n  public mix(other: Color, delta: number): Color {\n    return new Color(\n        this.r + (other.r - this.r) * delta, this.g + (other.g - this.g) * delta, this.b + (other.b - this.b) * delta,\n        this.a);\n  }\n\n  /**\n   * Clamps the color to the given range (fixed alpha).\n   * @param min The minimum color.\n   * @param max The maximum color.\n   * @returns The clamped color.\n   */\n  public clamp(min: Color = Color.black(), max: Color = Color.white()): Color {\n    return new Color(\n        Math.max(min.r, Math.min(max.r, this.r)), Math.max(min.g, Math.min(max.g, this.g)),\n        Math.max(min.b, Math.min(max.b, this.b)), Math.max(min.a, Math.min(max.a, this.a)));\n  }\n}\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","import {Vec2} from './vec2';\n\n/**\n * Represents a row-major 3x3 matrix.\n */\nexport class Mat3 {\n  /** The matrix elements. */\n  public elements: Float32Array;\n\n  /**\n   * @param elements The matrix elements.\n   */\n  public constructor(...elements: number[]) {\n    if (elements.length !== 9) throw new Error('Invalid Mat3 elements array size, must be 9');\n    this.elements = new Float32Array(elements);\n  }\n\n  /**\n   * Creates a new matrix from the given elements.\n   * @param elements The matrix elements.\n   * @returns The new matrix.\n   */\n  public static new(...elements: number[]): Mat3 {\n    return new Mat3(...elements);\n  }\n\n  /**\n   * Creates a new identity matrix.\n   * @returns The new identity matrix.\n   */\n  public static identity(): Mat3 {\n    return new Mat3(1, 0, 0, 0, 1, 0, 0, 0, 1);\n  }\n\n  /**\n   * Creates a new translation matrix.\n   * @param vec The translation vector.\n   * @returns The new translation matrix.\n   */\n  public static translation(vec: Vec2): Mat3 {\n    return new Mat3(1, 0, 0, 0, 1, 0, vec.x, vec.y, 1);\n  }\n\n  /**\n   * Creates a new rotation matrix.\n   * @param angle The angle in radians.\n   * @returns The new rotation matrix.\n   */\n  public static rotation(angle: number): Mat3 {\n    const c = Math.cos(angle);\n    const s = Math.sin(angle);\n    return new Mat3(c, -s, 0, s, c, 0, 0, 0, 1);\n  }\n\n  /**\n   * Creates a new scaling matrix.\n   * @param vec The scaling vector.\n   * @returns The new scaling matrix.\n   */\n  public static scale(vec: Vec2): Mat3;\n\n  /**\n   * Creates a new scaling matrix.\n   * @param factor The scaling factor.\n   * @returns The new scaling matrix.\n   */\n  public static scale(factor: number): Mat3;\n\n  // Implementation\n  public static scale(v: Vec2|number): Mat3 {\n    if (v instanceof Vec2)\n      return new Mat3(v.x, 0, 0, 0, v.y, 0, 0, 0, 1);\n    else\n      return new Mat3(v, 0, 0, 0, v, 0, 0, 0, 1);\n  }\n\n  /**\n   * Clones this matrix.\n   * @returns The clone.\n   */\n  public clone(): Mat3 {\n    return new Mat3(...Array.from(this.elements));\n  }\n\n  /**\n   * Multiplies this matrix with another matrix.\n   * @param other The other matrix.\n   * @returns The result.\n   */\n  public mul(other: Mat3): Mat3;\n\n  /**\n   * Multiplies this matrix by a scalar.\n   * @param scalar Scalar to multiply by.\n   * @returns The result.\n   */\n  public mul(other: number): Mat3;\n\n  // Implementation.\n  public mul(other: Mat3|number): Mat3 {\n    const a = this.elements;\n    const c = [0, 0, 0, 0, 0, 0, 0, 0, 0];\n\n    if (other instanceof Mat3) {\n      // Matrix multiplication.\n      const b = other.elements;\n      for (let i = 0; i < 3; i++)\n        for (let j = 0; j < 3; j++)\n          for (let k = 0; k < 3; k++) c[i * 3 + j] += a[i * 3 + k] * b[k * 3 + j];\n    } else {\n      // Scalar multiplication.\n      for (let i = 0; i < 3; i++)\n        for (let j = 0; j < 3; j++) c[i * 3 + j] = a[i * 3 + j] * other;\n    }\n\n    return new Mat3(...c);\n  }\n\n  /**\n   * Calculates the determinant of this matrix.\n   * @returns The determinant.\n   */\n  public det(): number {\n    const a = this.elements;\n    let det = 0.0;\n    det += a[0] * a[4] * a[8] + a[1] * a[5] * a[6] + a[2] * a[3] * a[7];\n    det -= a[2] * a[4] * a[6] + a[1] * a[3] * a[8] + a[0] * a[5] * a[7];\n    return det;\n  }\n\n  /**\n   * Calculates the transpose of this matrix.\n   * @returns The transpose.\n   */\n  public transpose(): Mat3 {\n    const a = this.elements;\n    const c = [0, 0, 0, 0, 0, 0, 0, 0, 0];\n    for (let i = 0; i < 3; i++)\n      for (let j = 0; j < 3; j++) c[i * 3 + j] = a[j * 3 + i];\n    return new Mat3(...c);\n  }\n\n  /**\n   * Calculates the adjunt matrix of this matrix.\n   * @returns The adjunt matrix.\n   */\n  public adjunt(): Mat3 {\n    const a = this.elements;\n    const b = [0, 0, 0, 0, 0, 0, 0, 0, 0];\n    b[0 * 3 + 0] = a[1 * 3 + 1] * a[2 * 3 + 2] - a[1 * 3 + 2] * a[2 * 3 + 1];\n    b[0 * 3 + 1] = a[0 * 3 + 2] * a[2 * 3 + 1] - a[0 * 3 + 1] * a[2 * 3 + 2];\n    b[0 * 3 + 2] = a[0 * 3 + 1] * a[1 * 3 + 2] - a[0 * 3 + 2] * a[1 * 3 + 1];\n    b[1 * 3 + 0] = a[1 * 3 + 2] * a[2 * 3 + 0] - a[1 * 3 + 0] * a[2 * 3 + 2];\n    b[1 * 3 + 1] = a[0 * 3 + 0] * a[2 * 3 + 2] - a[0 * 3 + 2] * a[2 * 3 + 0];\n    b[1 * 3 + 2] = a[0 * 3 + 2] * a[1 * 3 + 0] - a[0 * 3 + 0] * a[1 * 3 + 2];\n    b[2 * 3 + 0] = a[1 * 3 + 0] * a[2 * 3 + 1] - a[1 * 3 + 1] * a[2 * 3 + 0];\n    b[2 * 3 + 1] = a[0 * 3 + 1] * a[2 * 3 + 0] - a[0 * 3 + 0] * a[2 * 3 + 1];\n    b[2 * 3 + 2] = a[0 * 3 + 0] * a[1 * 3 + 1] - a[0 * 3 + 1] * a[1 * 3 + 0];\n    return new Mat3(...b);\n  }\n\n  /**\n   * Calculates the inverse of this matrix.\n   * @returns The inverse.\n   */\n  public inverse(): Mat3 {\n    const det = this.det();\n    if (det === 0) throw new Error(`Can't find the inverse of the matrix because its determinant is zero`);\n    return this.adjunt().mul(1 / det);\n  }\n}\n","import {Mat3} from './mat3';\n\n/**\n * Represents a row-major 2D vector.\n */\nexport class Vec2 {\n  /** Zero vector. */\n  public static readonly ZERO = new Vec2(0, 0);\n\n  /** The x coordinate. */\n  private _x: number;\n\n  /** The y coordinate. */\n  private _y: number;\n\n  /**\n   * @param x The x coordinate.\n   * @param y The y coordinate.\n   */\n  public constructor(x: number, y: number) {\n    this._x = x;\n    this._y = y;\n  }\n\n  /**\n   * Gets the x coordinate.\n   */\n  public get x(): number {\n    return this._x;\n  }\n\n  /**\n   * Gets the y coordinate.\n   */\n  public get y(): number {\n    return this._y;\n  }\n\n  /**\n   * Creates a new vector.\n   * @param x The x coordinate.\n   * @param y The y coordinate.\n   * @returns The new vector.\n   */\n  public static new(x: number, y: number): Vec2 {\n    return new Vec2(x, y);\n  }\n\n  /**\n   * Creates a new vector from an angle.\n   * @param angle The angle.\n   * @returns The new vector.\n   */\n  public static fromAngle(angle: number): Vec2 {\n    return new Vec2(Math.cos(angle), Math.sin(angle));\n  }\n\n  /**\n   * Returns a random vector within the given range.\n   * @param min The minimum value.\n   * @param max The maximum value.\n   * @returns The result.\n   */\n  public static random(min: Vec2, max: Vec2): Vec2 {\n    return new Vec2(Math.random() * (max.x - min.x) + min.x, Math.random() * (max.y - min.y) + min.y);\n  }\n\n  /**\n   * Adds another vector to this vector and returns the result.\n   * @param other The other vector.\n   * @returns The result.\n   */\n  public add(other: Vec2): Vec2 {\n    return new Vec2(this._x + other._x, this._y + other._y);\n  }\n\n  /**\n   * Subtracts another vector from this vector and returns the result.\n   * @param other The other vector.\n   * @returns The result.\n   */\n  public sub(other: Vec2): Vec2 {\n    return new Vec2(this._x - other._x, this._y - other._y);\n  }\n\n  /**\n   * Multiplies this vector by a scalar and returns the result.\n   * @param scalar The scalar.\n   * @returns The result.\n   */\n  public mul(scalar: number): Vec2 {\n    return new Vec2(this._x * scalar, this._y * scalar);\n  }\n\n  /**\n   * Divides this vector by a scalar and returns the result.\n   * @param scalar The scalar.\n   * @returns The result.\n   */\n  public div(scalar: number): Vec2 {\n    return new Vec2(this._x / scalar, this._y / scalar);\n  }\n\n  /**\n   * Calculates the dot product of this vector and another vector.\n   * @param other The other vector.\n   * @returns The dot product.\n   */\n  public dot(other: Vec2): number {\n    return this._x * other._x + this._y * other._y;\n  }\n\n  /**\n   * Calculates the squared length of this vector.\n   * @returns The squared length.\n   */\n  public lengthSquared(): number {\n    return this.dot(this);\n  }\n\n  /**\n   * Calculates the length of this vector.\n   * @returns The length.\n   */\n  public length(): number {\n    return Math.sqrt(this.lengthSquared());\n  }\n\n  /**\n   * Normalizes this vector and returns the result.\n   * @returns The result.\n   */\n  public normalize(): Vec2 {\n    return this.div(this.length());\n  }\n\n  /**\n   * Calculates the angle between this vector and another vector, or the angle between this vector and the x axis.\n   * @param other The other vector.\n   * @returns The angle.\n   */\n  public angle(other?: Vec2): number {\n    if (other === undefined)\n      return Math.atan2(this._y, this._x);\n    else\n      return Math.acos(this.dot(other) / (this.length() * other.length()));\n  }\n\n  /**\n   * Calculates the perpendicular vector of this vector and returns the result.\n   * @returns The result.\n   */\n  public perpendicular(): Vec2 {\n    return new Vec2(-this._y, this._x);\n  }\n\n  /**\n   * Multiplies this vector by a matrix.\n   * @param mat The matrix.\n   * @returns The result.\n   */\n  public apply(mat: Mat3): Vec2 {\n    const a = mat.elements;\n    const x = this._x;\n    const y = this._y;\n    return new Vec2(a[0] * x + a[3] * y + a[6], a[1] * x + a[4] * y + a[7]);\n  }\n\n  /**\n   * Clamps this vector to a given range.\n   * @param min The minimum value.\n   * @param max The maximum value.\n   * @returns The result.\n   */\n  public clamp(min: Vec2, max: Vec2): Vec2 {\n    return new Vec2(Math.max(min.x, Math.min(max.x, this._x)), Math.max(min.y, Math.min(max.y, this._y)));\n  }\n\n  /**\n   * Returns the absolute vector.\n   * @returns The result.\n   */\n  public abs(): Vec2 {\n    return new Vec2(Math.abs(this._x), Math.abs(this._y));\n  }\n\n  /**\n   * Returns the vector with the maximum components.\n   * @param other The other vector.\n   * @returns The result.\n   */\n  public max(other: Vec2): Vec2 {\n    return new Vec2(Math.max(this._x, other._x), Math.max(this._y, other._y));\n  }\n\n  /**\n   * Returns the vector with the minimum components.\n   * @param other The other vector.\n   * @returns The result.\n   */\n  public min(other: Vec2): Vec2 {\n    return new Vec2(Math.min(this._x, other._x), Math.min(this._y, other._y));\n  }\n\n  /**\n   * Reflects this vector on a normal vector.\n   * @param normal The normal vector.\n   * @returns The result.\n   */\n  public reflect(normal: Vec2): Vec2 {\n    return this.sub(normal.mul(2 * this.dot(normal)));\n  }\n\n  /**\n   * Mixes this vector with another vector.\n   * @param other The other vector.\n   * @param t The mix factor.\n   * @returns The result.\n   */\n  public mix(other: Vec2, t: number): Vec2 {\n    return new Vec2(this._x * (1 - t) + other._x * t, this._y * (1 - t) + other._y * t);\n  }\n}","import {Mat3, Vec2} from '../math';\n\n/**\n * Represents a camera used to render a scene.\n */\nexport class Camera {\n  /** The camera's position. */\n  private _position: Vec2;\n\n  /** The camera's velocity. */\n  public velocity: Vec2;\n\n  /** The camera's zoom. */\n  private _zoom: number;\n\n  /** The canvas' width. */\n  private _width: number;\n\n  /** The canvas' height. */\n  private _height: number;\n\n  /** The camera's transform matrix. */\n  private _matrix: Mat3;\n\n  /**\n   * @param position The camera's position.\n   * @param zoom The camera's zoom.\n   * @param width The canvas' width.\n   * @param height The canvas' height.\n   */\n  public constructor(position: Vec2, zoom: number, width: number, height: number) {\n    this._position = position;\n    this.velocity = Vec2.ZERO;\n    this._zoom = zoom;\n    this._width = width;\n    this._height = height;\n    this.updateMatrix();\n  }\n\n  /**\n   * Gets the camera's position.\n   */\n  public get position(): Vec2 {\n    return this._position;\n  }\n\n  /**\n   * Sets the camera's position.\n   */\n  public set position(value: Vec2) {\n    this._position = value;\n    this.updateMatrix();\n  }\n\n  /**\n   * Gets the camera's zoom.\n   */\n  public get zoom(): number {\n    return this._zoom;\n  }\n\n  /**\n   * Sets the camera's zoom.\n   */\n  public set zoom(value: number) {\n    this._zoom = value;\n    this.updateMatrix();\n  }\n\n  /**\n   * Sets the canvas' width.\n   */\n  public set width(value: number) {\n    this._width = value;\n    this.updateMatrix();\n  }\n\n  /**\n   * Sets the canvas' height.\n   */\n  public set height(value: number) {\n    this._height = value;\n    this.updateMatrix();\n  }\n\n  /**\n   * Gets the camera's transform matrix.\n   */\n  public get matrix(): Mat3 {\n    return this._matrix.clone();\n  }\n\n  /**\n   * Converts a point from world coordinates to screen coordinates.\n   * @param point The point to convert.\n   * @return The converted point.\n   */\n  public worldToScreen(point: Vec2): Vec2 {\n    return point.apply(this._matrix);\n  }\n\n  /**\n   * Converts a point from screen coordinates to world coordinates.\n   * @param point The point to convert.\n   * @return The converted point.\n   */\n  public screenToWorld(point: Vec2): Vec2 {\n    return point.apply(this._matrix.inverse());\n  }\n\n  /**\n   * Converts a point from canvas coordinates to world coordinates.\n   * @param point The point to convert.\n   * @return The converted point.\n   */\n  public canvasToWorld(point: Vec2): Vec2 {\n    const normalized = Vec2.new(point.x / this._width, -point.y / this._height).mul(2.0).add(Vec2.new(-1, 1));\n    return this.screenToWorld(normalized);\n  }\n\n  /**\n   * Updates the camera's transform matrix.\n   */\n  private updateMatrix(): void {\n    const translation = Mat3.translation(this._position.mul(-1));\n    const scale = Mat3.scale(Vec2.new(this._zoom * this._height / this._width, this._zoom));\n    this._matrix = translation.mul(scale);\n  }\n}\n","import {Color, Mat3, Vec2} from '../math';\n\nimport {Command} from './command';\nimport {DrawArrow} from './draw-arrow';\nimport {DrawBox} from './draw-box';\nimport {DrawCircle} from './draw-circle';\nimport {DrawLine} from './draw-line';\nimport {Renderer} from './renderer';\n\n/** Background color. */\nconst BACKGROUND_COLOR = new Color(0.3, 0.6, 0.9, 1.0);\n\n/** Number of circle divisions. */\nconst CIRCLE_DIVISIONS = 64;\n\n/** Line thickness. */\nconst LINE_THICKNESS = 0.05;\n\n/** Arrow head size. */\nconst ARROW_HEAD_SIZE = 0.5;\n\n/**\n * Renderer implementation for WebGL.\n */\nexport class WebGLRenderer extends Renderer {\n  /** The WebGL context. */\n  private _gl: WebGLRenderingContext;\n\n  /** The shader used to draw. */\n  private _drawShader: ShaderProgram;\n\n  /** The draw shader position attribute location. */\n  private _drawShaderPositionLocation: number;\n\n  /** The draw shader transform uniform location. */\n  private _drawShaderTransformLocation: WebGLUniformLocation;\n\n  /** The draw shader color uniform location. */\n  private _drawShaderColorLocation: WebGLUniformLocation;\n\n  /** Vertex buffer used for drawing primitives. */\n  private _vertexBuffer: WebGLBuffer;\n\n  /** Circle vertex offset and count. */\n  private _circle: [number, number];\n\n  /** Line vertex offset and count. */\n  private _line: [number, number];\n\n  /** Box vertex offset and count. */\n  private _box: [number, number];\n\n  /**\n   * @param canvas The canvas element.\n   */\n  public constructor(canvas: HTMLCanvasElement, gl: WebGLRenderingContext) {\n    super(canvas);\n    this._gl = gl;\n\n    // Create the shader program used to draw.\n    this._drawShader = new ShaderProgram(\n        this._gl, `\n      attribute vec2 position;\n\n      uniform mat3 transform;\n\n      void main() {\n        vec3 position = transform * vec3(position, 1.0);\n        gl_Position = vec4(position.xy, 0.0, 1.0);\n      }\n    `,\n        `\n      precision mediump float;\n\n      uniform vec3 color;\n\n      void main() {\n        gl_FragColor = vec4(color, 1.0);\n      }\n    `);\n\n    // Get the shader attributes locations and uniform locations.\n    this._drawShaderPositionLocation = this._drawShader.getAttributeLocation('position');\n    this._drawShaderTransformLocation = this._drawShader.getUniformLocation('transform');\n    this._drawShaderColorLocation = this._drawShader.getUniformLocation('color');\n\n    // Generate circle primitive.\n    let vertices: number[] = [];\n    this._circle = [0, CIRCLE_DIVISIONS + 2];\n    vertices.push(0.0, 0.0);\n    for (let i = 0; i <= CIRCLE_DIVISIONS; i++) {\n      const angle = 2 * Math.PI * i / CIRCLE_DIVISIONS;\n      vertices.push(Math.cos(angle), Math.sin(angle));\n    }\n\n    // Generate line primitive.\n    this._line = [vertices.length / 2, 4];\n    vertices.push(-LINE_THICKNESS, 0.0);\n    vertices.push(-LINE_THICKNESS, 1.0);\n    vertices.push(+LINE_THICKNESS, 1.0);\n    vertices.push(+LINE_THICKNESS, 0.0);\n\n    // Generate box primitive.\n    this._box = [vertices.length / 2, 4];\n    vertices.push(-1.0, -1.0);\n    vertices.push(-1.0, +1.0);\n    vertices.push(+1.0, +1.0);\n    vertices.push(+1.0, -1.0);\n\n    // Create the vertex buffer used to draw primitives.\n    this._vertexBuffer = this._gl.createBuffer()!;\n    this._gl.bindBuffer(this._gl.ARRAY_BUFFER, this._vertexBuffer);\n    this._gl.bufferData(this._gl.ARRAY_BUFFER, new Float32Array(vertices), this._gl.STATIC_DRAW);\n  }\n\n  // Flushes the draw commands queue.\n  protected override render(): void {\n    // Clear the canvas.\n    this._gl.viewport(0, 0, this._canvas.width, this._canvas.height);\n    this._gl.clearColor(BACKGROUND_COLOR.r, BACKGROUND_COLOR.g, BACKGROUND_COLOR.b, 1);\n    this._gl.clear(this._gl.COLOR_BUFFER_BIT);\n\n    // Execute all the draw commands.\n    this._drawShader.use();\n    this.executeCommands(this.executeCommand.bind(this));\n  }\n\n  /**\n   * Executes a draw command.\n   * @param command The command to execute.\n   */\n  private executeCommand(command: Command): void {\n    // Draw circle command.\n    if (command instanceof DrawCircle) {\n      // Set uniforms.\n      const model = Mat3.scale(command.radius).mul(Mat3.translation(command.center));\n      const final = model.mul(this.camera.matrix);\n      this._gl.uniformMatrix3fv(this._drawShaderTransformLocation, false, final.elements);\n      this._gl.uniform3f(this._drawShaderColorLocation, command.color.r, command.color.g, command.color.b);\n\n      // Draw the circle.\n      this._gl.enableVertexAttribArray(this._drawShaderPositionLocation);\n      this._gl.vertexAttribPointer(this._drawShaderPositionLocation, 2, this._gl.FLOAT, false, 0, 0);\n      this._gl.drawArrays(this._gl.TRIANGLE_FAN, this._circle[0], this._circle[1]);\n    }\n    // Draw box command.\n    else if (command instanceof DrawBox) {\n      // Set uniforms.\n      const model = Mat3.scale(command.size).mul(Mat3.translation(command.center));\n      const final = model.mul(this.camera.matrix);\n      this._gl.uniformMatrix3fv(this._drawShaderTransformLocation, false, final.elements);\n      this._gl.uniform3f(this._drawShaderColorLocation, command.color.r, command.color.g, command.color.b);\n\n      // Draw the box.\n      this._gl.enableVertexAttribArray(this._drawShaderPositionLocation);\n      this._gl.vertexAttribPointer(this._drawShaderPositionLocation, 2, this._gl.FLOAT, false, 0, 0);\n      this._gl.drawArrays(this._gl.TRIANGLE_FAN, this._box[0], this._box[1]);\n    }\n    // Draw line command.\n    else if (command instanceof DrawLine) {\n      // Set uniforms.\n      const offset = command.end.sub(command.start);\n      const translation = Mat3.translation(command.start);\n      const scale = Mat3.scale(Vec2.new(command.thickness, offset.length()));\n      const rotation = Mat3.rotation(Math.PI / 2 - offset.angle());\n      const final = scale.mul(rotation).mul(translation).mul(this.camera.matrix);\n      this._gl.uniformMatrix3fv(this._drawShaderTransformLocation, false, final.elements);\n      this._gl.uniform3f(this._drawShaderColorLocation, command.color.r, command.color.g, command.color.b);\n\n      // Draw the line.\n      this._gl.enableVertexAttribArray(this._drawShaderPositionLocation);\n      this._gl.vertexAttribPointer(this._drawShaderPositionLocation, 2, this._gl.FLOAT, false, 0, 0);\n      this._gl.drawArrays(this._gl.TRIANGLE_FAN, this._line[0], this._line[1]);\n    }\n    // Draw arrow command.\n    else if (command instanceof DrawArrow) {\n      // Bind vertex array and set the color.\n      this._gl.enableVertexAttribArray(this._drawShaderPositionLocation);\n      this._gl.vertexAttribPointer(this._drawShaderPositionLocation, 2, this._gl.FLOAT, false, 0, 0);\n      this._gl.uniform3f(this._drawShaderColorLocation, command.color.r, command.color.g, command.color.b);\n\n      // Draw the arrow line.\n      const offset = command.end.sub(command.start);\n      const translation = Mat3.translation(command.start);\n      const scale = Mat3.scale(Vec2.new(command.thickness, offset.length()));\n      const rotation = Mat3.rotation(Math.PI / 2 - offset.angle());\n      const final = scale.mul(rotation).mul(translation).mul(this.camera.matrix);\n      this._gl.uniformMatrix3fv(this._drawShaderTransformLocation, false, final.elements);\n      this._gl.drawArrays(this._gl.TRIANGLE_FAN, this._line[0], this._line[1]);\n\n      // Draw the arrow head.\n      const head = Mat3.translation(command.end);\n      const headScale = Mat3.scale(Vec2.new(command.thickness, command.thickness * ARROW_HEAD_SIZE));\n      const head1Rotation = Mat3.rotation(Math.PI / 6 - Math.PI / 2 - offset.angle());\n      const head1Final = headScale.mul(head1Rotation).mul(head).mul(this.camera.matrix);\n      const head2Rotation = Mat3.rotation(-Math.PI / 6 - Math.PI / 2 - offset.angle());\n      const head2Final = headScale.mul(head2Rotation).mul(head).mul(this.camera.matrix);\n\n      this._gl.uniformMatrix3fv(this._drawShaderTransformLocation, false, head1Final.elements);\n      this._gl.drawArrays(this._gl.TRIANGLE_FAN, this._line[0], this._line[1]);\n      this._gl.uniformMatrix3fv(this._drawShaderTransformLocation, false, head2Final.elements);\n      this._gl.drawArrays(this._gl.TRIANGLE_FAN, this._line[0], this._line[1]);\n    }\n  }\n}\n\n/**\n * WebGL shader program wrapper.\n */\nclass ShaderProgram {\n  /** The WebGL context. */\n  private _gl: WebGLRenderingContext;\n\n  /** The shader program. */\n  private _program: WebGLProgram;\n\n  /** The vertex shader. */\n  private _vertexShader: WebGLShader;\n\n  /** The fragment shader. */\n  private _fragmentShader: WebGLShader;\n\n  public constructor(gl: WebGLRenderingContext, vertexShaderSource: string, fragmentShaderSource: string) {\n    this._gl = gl;\n\n    // Create shaders.\n    this._vertexShader = this.createShader(this._gl.VERTEX_SHADER, vertexShaderSource);\n    this._fragmentShader = this.createShader(this._gl.FRAGMENT_SHADER, fragmentShaderSource);\n\n    // Attach and link the shaders.\n    this._program = this._gl.createProgram()!;\n    this._gl.attachShader(this._program, this._vertexShader);\n    this._gl.attachShader(this._program, this._fragmentShader);\n    this._gl.linkProgram(this._program);\n\n    // Check if the program linked successfully.\n    if (!this._gl.getProgramParameter(this._program, this._gl.LINK_STATUS))\n      throw new Error(`Shader linking failed: ${this._gl.getProgramInfoLog(this._program)!}`);\n  }\n\n  /**\n   * Uses the shader program.\n   */\n  public use(): void {\n    this._gl.useProgram(this._program);\n  }\n\n  /**\n   * Gets the attribute location.\n   * @param name The attribute name.\n   * @return The attribute location.\n   */\n  public getAttributeLocation(name: string): number {\n    return this._gl.getAttribLocation(this._program, name);\n  }\n\n  /**\n   * Gets the uniform location.\n   * @param name The uniform name.\n   * @return The uniform location.\n   */\n  public getUniformLocation(name: string): WebGLUniformLocation {\n    const loc = this._gl.getUniformLocation(this._program, name);\n    if (loc === null) throw new Error(`Shader uniform ${name} not found.`);\n    return loc;\n  }\n\n  /**\n   * Creates a WebGL shader.\n   * @param type The shader type.\n   * @param source The shader source.\n   */\n  private createShader(type: number, source: string): WebGLShader {\n    const shader = this._gl.createShader(type)!;\n    this._gl.shaderSource(shader, source);\n    this._gl.compileShader(shader);\n\n    // Check if the shader compiled successfully.\n    if (!this._gl.getShaderParameter(shader, this._gl.COMPILE_STATUS))\n      throw new Error(`Shader compilation failed: ${this._gl.getShaderInfoLog(shader)!}`);\n\n    return shader;\n  }\n}","import {Color, Vec2} from '../math';\nimport {Command} from './command';\n\n/**\n * Command used to draw an arrow.\n */\nexport class DrawArrow implements Command {\n  /** The start of the arrow. */\n  public readonly start: Vec2;\n\n  /** The end of the arrow. */\n  public readonly end: Vec2;\n\n  /** The thickness of the arrow. */\n  public readonly thickness: number;\n\n  /** The color of the arrow. */\n  public readonly color: Color;\n\n  /** The start velocity of the arrow. */\n  private readonly _startVelocity: Vec2;\n\n  /** The end velocity of the arrow. */\n  private readonly _endVelocity: Vec2;\n\n  /**\n   * @param start The start of the arrow.\n   * @param end The end of the arrow.\n   * @param radius The thickness of the arrow.\n   * @param color The color of the arrow.\n   * @param startVelocity The velocity of the start of the arrow.\n   * @param endVelocity The velocity of the end of the arrow.\n   */\n  public constructor(start: Vec2, end: Vec2, thickness: number, color: Color, startVelocity: Vec2, endVelocity: Vec2) {\n    this.start = start;\n    this.end = end;\n    this.thickness = thickness;\n    this.color = color;\n    this._startVelocity = startVelocity;\n    this._endVelocity = endVelocity;\n  }\n\n  // Implement the Command interface.\n  public interpolate(dt: number): Command {\n    return new DrawArrow(\n        this.start.add(this._startVelocity.mul(dt)), this.end.add(this._endVelocity.mul(dt)), this.thickness,\n        this.color, this._startVelocity, this._endVelocity);\n  }\n}\n","import {Color, Vec2} from '../math';\nimport {Command} from './command';\n\n/**\n * Command used to draw a box.\n */\nexport class DrawBox implements Command {\n  /** The center of the box. */\n  public readonly center: Vec2;\n\n  /** The size of the box. */\n  public readonly size: Vec2;\n\n  /** The color of the box. */\n  public readonly color: Color;\n\n  /** The velocity of the box. */\n  private readonly _velocity: Vec2;\n\n  /**\n   * @param center The center of the box.\n   * @param size The size of the box.\n   * @param color The color of the box.\n   * @param velocity The velocity of the box.\n   */\n  public constructor(center: Vec2, size: Vec2, color: Color, velocity: Vec2) {\n    this.center = center;\n    this.size = size;\n    this.color = color;\n    this._velocity = velocity;\n  }\n\n  // Implement the Command interface.\n  public interpolate(dt: number): Command {\n    return new DrawBox(this.center.add(this._velocity.mul(dt)), this.size, this.color, this._velocity);\n  }\n}\n","import {Color, Vec2} from '../math';\nimport {Command} from './command';\n\n/**\n * Command used to draw a circle.\n */\nexport class DrawCircle implements Command {\n  /** The center of the circle. */\n  public readonly center: Vec2;\n\n  /** The radius of the circle. */\n  public readonly radius: number;\n\n  /** The color of the circle. */\n  public readonly color: Color;\n\n  /** The velocity of the circle. */\n  private readonly _velocity: Vec2;\n\n  /**\n   * @param center The center of the circle.\n   * @param radius The radius of the circle.\n   * @param color The color of the circle.\n   * @param velocity The velocity of the circle.\n   */\n  public constructor(center: Vec2, radius: number, color: Color, velocity: Vec2) {\n    this.center = center;\n    this.radius = radius;\n    this.color = color;\n    this._velocity = velocity;\n  }\n\n  // Implement the Command interface.\n  public interpolate(dt: number): Command {\n    return new DrawCircle(this.center.add(this._velocity.mul(dt)), this.radius, this.color, this._velocity);\n  }\n}\n","import {Color, Vec2} from '../math';\nimport {Command} from './command';\n\n/**\n * Command used to draw a line.\n */\nexport class DrawLine implements Command {\n  /** The start of the line. */\n  public readonly start: Vec2;\n\n  /** The end of the line. */\n  public readonly end: Vec2;\n\n  /** The thickness of the line. */\n  public readonly thickness: number;\n\n  /** The color of the line. */\n  public readonly color: Color;\n\n  /** The start velocity of the line. */\n  private readonly _startVelocity: Vec2;\n\n  /** The end velocity of the line. */\n  private readonly _endVelocity: Vec2;\n\n  /**\n   * @param start The start of the line.\n   * @param end The end of the line.\n   * @param radius The thickness of the line.\n   * @param color The color of the line.\n   * @param startVelocity The velocity of the start of the line.\n   * @param endVelocity The velocity of the end of the line.\n   */\n  public constructor(start: Vec2, end: Vec2, thickness: number, color: Color, startVelocity: Vec2, endVelocity: Vec2) {\n    this.start = start;\n    this.end = end;\n    this.thickness = thickness;\n    this.color = color;\n    this._startVelocity = startVelocity;\n    this._endVelocity = endVelocity;\n  }\n\n  // Implement the Command interface.\n  public interpolate(dt: number): Command {\n    return new DrawLine(\n        this.start.add(this._startVelocity.mul(dt)), this.end.add(this._endVelocity.mul(dt)), this.thickness,\n        this.color, this._startVelocity, this._endVelocity);\n  }\n}\n","import {Color, Vec2} from '../math';\nimport {Command} from './command';\nimport {DrawArrow} from './draw-arrow';\nimport {DrawBox} from './draw-box';\nimport {DrawCircle} from './draw-circle';\nimport {DrawLine} from './draw-line';\n\n/** Represents a draw command queue. */\nexport class CommandQueue {\n  /** The commands in the queue. */\n  private _commands: Command[];\n\n  /** The time of the queue start. */\n  private _time: number;\n\n  // Default constructor.\n  public constructor(time: number) {\n    this._commands = [];\n    this._time = time;\n  }\n\n  /**\n   * Interpolates the queue to the given time.\n   * @param time The time to interpolate to.\n   */\n  public interpolate(time: number): CommandQueue {\n    const queue = new CommandQueue(time);\n    queue._commands = this._commands.map(command => command.interpolate(time - this._time));\n    return queue;\n  }\n\n  /**\n   * Iterates over the commands in the queue.\n   */\n  public[Symbol.iterator](): Iterator<Command> {\n    return this._commands[Symbol.iterator]();\n  }\n\n  /**\n   * Draws a moving box.\n   * @param center The center of the box.\n   * @param size The size of the box.\n   * @param color The color of the box.\n   * @param velocity The velocity of the box.\n   */\n  public drawMovingBox(center: Vec2, size: Vec2, color: Color, velocity: Vec2): void {\n    this._commands.push(new DrawBox(center, size, color, velocity));\n  }\n\n  /**\n   * Draws a moving circle.\n   * @param center The circle's center.\n   * @param radius The circle's radius.\n   * @param color The circle's color.\n   * @param velocity The circle's velocity.\n   */\n  public drawMovingCircle(center: Vec2, radius: number, color: Color, velocity: Vec2): void {\n    this._commands.push(new DrawCircle(center, radius, color, velocity));\n  }\n\n  /**\n   * Draws a moving line.\n   * @param start The start of the line.\n   * @param end The end of the line.\n   * @param thickness The thickness of the line.\n   * @param color The color of the line.\n   * @param startVelocity The start velocity of the line.\n   * @param endVelocity The end velocity of the line.\n   */\n  public drawMovingLine(\n      start: Vec2, end: Vec2, thickness: number, color: Color, startVelocity: Vec2, endVelocity: Vec2): void {\n    this._commands.push(new DrawLine(start, end, thickness, color, startVelocity, endVelocity));\n  }\n\n  /**\n   * Draws a moving arrow.\n   * @param start The start of the arrow.\n   * @param end The end of the arrow.\n   * @param thickness The thickness of the arrow.\n   * @param color The color of the arrow.\n   * @param startVelocity The start velocity of the arrow.\n   * @param endVelocity The end velocity of the arrow.\n   */\n  public drawMovingArrow(\n      start: Vec2, end: Vec2, thickness: number, color: Color, startVelocity: Vec2, endVelocity: Vec2): void {\n    this._commands.push(new DrawArrow(start, end, thickness, color, startVelocity, endVelocity));\n  }\n\n  /**\n   * Draws a box.\n   * @param center The center of the box.\n   * @param size The size of the box.\n   * @param color The color of the box.\n   */\n  public drawBox(center: Vec2, size: Vec2, color: Color): void {\n    this.drawMovingBox(center, size, color, Vec2.ZERO);\n  }\n\n  /**\n   * Draws a circle.\n   * @param center The circle's center.\n   * @param radius The circle's radius.\n   * @param color The circle's color.\n   */\n  public drawCircle(center: Vec2, radius: number, color: Color): void {\n    this.drawMovingCircle(center, radius, color, Vec2.ZERO);\n  }\n\n  /**\n   * Draws a line.\n   * @param start The start of the line.\n   * @param end The end of the line.\n   * @param thickness The thickness of the line.\n   * @param color The color of the line.\n   */\n  public drawLine(start: Vec2, end: Vec2, thickness: number, color: Color): void {\n    this.drawMovingLine(start, end, thickness, color, Vec2.ZERO, Vec2.ZERO);\n  }\n\n  /**\n   * Draws an arrow.\n   * @param start The start of the arrow.\n   * @param end The end of the arrow.\n   * @param thickness The thickness of the arrow.\n   * @param color The color of the arrow.\n   */\n  public drawArrow(start: Vec2, end: Vec2, thickness: number, color: Color): void {\n    this.drawMovingArrow(start, end, thickness, color, Vec2.ZERO, Vec2.ZERO);\n  }\n}\n","export {Body} from './body';\nexport {Creature} from './creature';\nexport {Food} from './food';\nexport {Stage, StageSettings, TIME_STEP} from './stage';\n","import {CommandQueue} from '../gl';\nimport {Vec2} from '../math';\n\nimport {Collider} from './collider';\n\n/**\n * Represents a physics body.\n */\nexport abstract class Body {\n  /** The position of the body. */\n  private _position: Vec2;\n\n  /**\n   * @param position The position of the body.\n   */\n  public constructor(position: Vec2) {\n    this._position = position;\n  }\n\n  /**\n   * Gets the position of the body.\n   */\n  public get position(): Vec2 {\n    return this._position;\n  }\n\n  /**\n   * Sets the position of the body.\n   */\n  public set position(position: Vec2) {\n    this._position = position;\n  }\n\n  /**\n   * Gets the collider used.\n   */\n  public abstract get collider(): Collider;\n\n  /**\n   * Draws the body.\n   * @param queue The command queue to draw to.\n   */\n  public abstract draw(queue: CommandQueue): void;\n}\n\n/**\n * Represents a kinematic body.\n */\nexport abstract class KinematicBody extends Body {\n  /** The velocity of the body. */\n  private _velocity: Vec2;\n\n  /**\n   * @param position The position of the body.\n   * @param velocity The velocity of the body.\n   * @param mass The mass of the body.\n   */\n  public constructor(position: Vec2, velocity: Vec2) {\n    super(position);\n    this._velocity = velocity;\n  }\n\n  /**\n   * Gets the velocity of the body.\n   */\n  public get velocity(): Vec2 {\n    return this._velocity;\n  }\n\n  /**\n   * Sets the velocity of the body.\n   */\n  public set velocity(velocity: Vec2) {\n    this._velocity = velocity;\n  }\n}\n\n/**\n * Represents a static body.\n */\nexport abstract class StaticBody extends Body {\n  /**\n   * @param position The position of the body.\n   */\n  public constructor(position: Vec2) {\n    super(position);\n  }\n}\n","import {Genotype, Network} from '../evo';\nimport {CommandQueue} from '../gl';\nimport {Color, Mat3, Vec2} from '../math';\n\nimport {KinematicBody} from './body';\nimport {CircleCollider, Collider} from './collider';\nimport {Food} from './food';\n\n/** Radius of a creature. */\nconst CREATURE_RADIUS = 0.05;\n\n/** The movement speed. */\nconst MOVEMENT_SPEED = 1.0;\n\n/** The rotation speed. */\nconst ROTATION_SPEED = 5.0;\n\n/**\n * Represents a creature in the simulation.\n */\nexport class Creature extends KinematicBody {\n  /** The creature's radius. */\n  public static readonly Radius = CREATURE_RADIUS;\n\n  /** The creature's fitness. */\n  public fitness: number;\n\n  /** The creature's genotype. */\n  private _genotype: Genotype;\n\n  /** The creature's color. */\n  private _color: Color;\n\n  /** The creature's eye angles. */\n  private _eyes: number[];\n\n  /** The neural network of the creature. */\n  private _nn: Network;\n\n  /** The forward direction of the creature. */\n  private _forward: Vec2;\n\n  /** The rotation velocity of the creature. */\n  private _rotationVelocity: number;\n\n  /**\n   * @param eyeCount The number of eyes.\n   * @param genotype The genotype of the creature.\n   * @param position The position of the creature.\n   * @param forward The forward direction of the creature.\n   * @param color The color of the creature.\n   */\n  public constructor(eyeCount: number, genotype: Genotype, position: Vec2, forward: Vec2, color: Color) {\n    super(position, Vec2.ZERO);\n    this._genotype = genotype;\n    this._nn = new Network(genotype.neuronCount, genotype.connections);\n    for (let i = 0; i < eyeCount; i++)\n      this._nn.markInput(i);\n    this._nn.markOutput(eyeCount);\n    this._nn.markOutput(eyeCount + 1);\n    this._forward = forward.normalize();\n    this._color = color.clone();\n    this.fitness = 0;\n\n    // Set the eye angles.\n    this._eyes = [];\n    if (eyeCount == 1)\n      this._eyes = [0];\n    else if (eyeCount == 2)\n      this._eyes = [-Math.PI / 4, Math.PI / 4];\n    else if (eyeCount == 3)\n      this._eyes = [-Math.PI / 3, 0, Math.PI / 3];\n  }\n\n  /**\n   * Gets the number of neurons of the creature's neural network.\n   * @param eyeCount The number of eyes.\n   * @param extraNeuronCount The number of extra neurons.\n   * @returns The topology of a creature's neural network.\n   */\n  public static getNeuronCount(eyeCount: number, extraNeuronCount: number): number {\n    return eyeCount + extraNeuronCount + 2;\n  }\n\n  /**\n   * Updates the creature.\n   * @param nearestFood The nearest food.\n   * @param dt The time step.\n   */\n  public update(nearestFood: Food|null, dt: number): void {\n    // Update the creature's neural network inputs.\n    for (let i = 0; i < this._eyes.length; i++) {\n      const eye = this._forward.apply(Mat3.rotation(this._eyes[i])).normalize();\n      let distance = 0;\n      if (nearestFood === null)\n        distance = Infinity;\n      else\n        distance = nearestFood.position.sub(this.position.add(eye)).length();\n      this._nn.set(i, distance);\n    }\n\n    // Update the creature's neural network outputs.\n    this._nn.update();\n\n    // Update the creature's velocity and rotate it.\n    const dir = this._nn.get(this._eyes.length) > this._nn.get(this._eyes.length + 1) ? -1 : 1;\n    this._rotationVelocity = dir * ROTATION_SPEED;\n    this._forward = this._forward.apply(Mat3.rotation(this._rotationVelocity * dt));\n    this.velocity = this._forward.mul(MOVEMENT_SPEED);\n  }\n\n  /**\n   * Gets the genome of the creature.\n   */\n  public get genotype(): Genotype {\n    return this._genotype;\n  }\n\n  /**\n   * Gets the neural network of the creature.\n   */\n  public get nn(): Network {\n    return this._nn;\n  }\n\n  // Gets the creature's collider.\n  public override get collider(): Collider {\n    return new CircleCollider(this.position, CREATURE_RADIUS);\n  }\n\n  // Draw the creature.\n  public override draw(queue: CommandQueue): void {\n    for (let i = 0; i < this._eyes.length; i++) {\n      const eyeDir = this._forward.apply(Mat3.rotation(this._eyes[i]));\n      const eyeNextDir = this._forward.apply(Mat3.rotation(this._eyes[i] - this._rotationVelocity));\n      const eye = this.position.add(eyeDir.mul(CREATURE_RADIUS * 2));\n      const eyeNext = this.position.add(eyeNextDir.mul(CREATURE_RADIUS * 2));\n      const eyeVelocity = this.velocity.add(eyeNext.sub(eye));\n      queue.drawMovingLine(\n          this.position, eye, CREATURE_RADIUS * 4, this._color.mix(Color.black(), 0.2), this.velocity, eyeVelocity);\n      queue.drawMovingCircle(eye, CREATURE_RADIUS * 0.25, this._color.mix(Color.black(), 0.2), eyeVelocity);\n    }\n\n    queue.drawMovingCircle(this.position, CREATURE_RADIUS, this._color, this.velocity);\n  }\n}\n","export {Genome} from './genome';\nexport {Genotype} from './genotype';\nexport {Network} from './network';\nexport {Population} from './population';\n","/**\n * Represents a genome.\n */\nexport class Genome {\n  /** The genome's minimum neuron count. */\n  private _minNeuronCount: number;\n\n  /** The genome's maximum neuron count. */\n  private _maxNeuronCount: number;\n\n  /** The genome's minimum connection count. */\n  private _minConnectionCount: number;\n\n  /** The genome's maximum connection count. */\n  private _maxConnectionCount: number;\n\n  /**\n   * @param minNeuronCount The genome's minimum neuron count.\n   * @param maxNeuronCount The genome's maximum neuron count.\n   * @param minConnectionCount The genome's minimum connection count.\n   * @param maxConnectionCount The genome's maximum connection count.\n   */\n  public constructor(minNeuronCount: number, maxNeuronCount: number, minConnectionCount: number, maxConnectionCount: number) {\n    if (minNeuronCount > maxNeuronCount)\n      throw new Error('Genome creation failed: the minimum neuron count must be less than or equal to the maximum neuron count');\n    if (minConnectionCount > maxConnectionCount)\n      throw new Error('Genome creation failed: the minimum connection count must be less than or equal to the maximum connection count');\n\n    this._minNeuronCount = minNeuronCount;\n    this._maxNeuronCount = maxNeuronCount;\n    this._minConnectionCount = minConnectionCount;\n    this._maxConnectionCount = maxConnectionCount;\n  }\n\n  /**\n   * Gets the genome's minimum neuron count.\n   */\n  public get minNeuronCount(): number {\n    return this._minNeuronCount;\n  }\n\n  /**\n   * Gets the genome's maximum neuron count.\n   */\n  public get maxNeuronCount(): number {\n    return this._maxNeuronCount;\n  }\n\n  /**\n   * Gets the genome's minimum connection count.\n   */\n  public get minConnectionCount(): number {\n    return this._minConnectionCount;\n  }\n\n  /**\n   * Gets the genome's maximum connection count.\n   */\n  public get maxConnectionCount(): number {\n    return this._maxConnectionCount;\n  }\n}\n","import {Connection} from './connection';\nimport {Genome} from './genome';\n\n/**\n * Represents an instance of a genome, which can be mutated and crossed over with other genotypes.\n */\nexport class Genotype {\n  /** The genome of this genotype. */\n  private _genome: Genome;\n\n  /** The neuron count of this genotype. */\n  private _neuronCount: number;\n\n  /** The connections of this genotype. */\n  private _connections: Connection[];\n\n  /**\n   * @param genome The genome of this genotype.\n   * @param neuronCount The neuron count of this genotype.\n   * @param connections The connections of this genotype.\n   */\n  private constructor(genome: Genome, neuronCount: number, connections: Connection[]) {\n    this._genome = genome;\n    this._neuronCount = neuronCount;\n    this._connections = connections;\n  }\n\n  /**\n   * Creates a new random genotype.\n   * @param genome The genome of this genotype.\n   * @returns A new random genotype.\n   */\n  public static random(genome: Genome): Genotype {\n    let neuronCount =\n        Math.round(Math.random() * (genome.maxNeuronCount - genome.minNeuronCount)) + genome.minNeuronCount;\n    let connectionCount =\n        Math.round(Math.random() * (genome.maxConnectionCount - genome.minConnectionCount)) + genome.minConnectionCount;\n    let connections = new Array<Connection|null>(connectionCount).fill(null).map(() => Connection.random(neuronCount));\n    return new Genotype(genome, neuronCount, connections);\n  }\n\n  /**\n   * Gets the genome of this genotype.\n   */\n  public get genome(): Genome {\n    return this._genome;\n  }\n\n  /**\n   * Gets the neuron count of this genotype.\n   */\n  public get neuronCount(): number {\n    return this._neuronCount;\n  }\n\n  /**\n   * Gets the connections of this genotype.\n   */\n  public get connections(): Connection[] {\n    return this._connections;\n  }\n\n  /**\n   * Mutates this genotype.\n   * @param rate The mutation rate.\n   * @returns The mutated genotype.\n   */\n  public mutate(rate: number): Genotype {\n    let neuronCount = this.neuronCount;\n\n    // Change the neuron count.\n    if (Math.random() < rate) {\n      let delta = Math.random() < 0.5 ? 1 : -1;\n      let newNeuronCount = this.neuronCount + delta;\n      if (newNeuronCount >= this.genome.minNeuronCount && newNeuronCount <= this.genome.maxNeuronCount)\n        neuronCount = newNeuronCount;\n    }\n\n    // Change the connections.\n    let connections = this.connections\n                          .map(connection => {\n                            if (Math.random() < rate)\n                              return Connection.random(neuronCount);\n                            else if (Math.random() < rate / this.connections.length)\n                              return null;  // Remove the connection.\n                            else if (connection.source < neuronCount && connection.target < neuronCount)\n                              return connection;\n                            else\n                              return null;\n                          })\n                          .filter(connection => connection !== null) as Connection[];\n    // Add a connection.\n    if (connections.length < this.genome.maxConnectionCount && Math.random() < rate)\n      connections.push(Connection.random(neuronCount));\n\n    return new Genotype(this._genome, neuronCount, connections);\n  }\n}","/**\n * Represents a neural network connection between two neurons.\n */\nexport class Connection {\n  /** The amplitude of the weights of the connections. */\n  public static readonly WeightAmplitude: number = 10;\n\n  /** The connection's weight. */\n  private _weight: number;\n\n  /** The connection's source neuron. */\n  private _source: number;\n\n  /** The connection's target neuron. */\n  private _target: number;\n\n  /**\n   * @param weight The connection's denormalized weight.\n   * @param source The connection's source neuron.\n   * @param target The connection's target neuron.\n   */\n  public constructor(weight: number, source: number, target: number) {\n    this._weight = Connection.normalizeWeight(weight);\n    this._source = source;\n    this._target = source === target ? (source > 0 ? source - 1 : 1) : target;\n  }\n\n  /**\n   * Updates the connection.\n   * @param inputs The input neurons.\n   * @param outputs The output neurons.\n   */\n  public update(inputs: number[], outputs: number[]): void {\n    outputs[this._target] += inputs[this._source] * this._weight;\n  }\n\n  /**\n   * Gets the connection's source neuron.\n   */\n  public get source(): number {\n    return this._source;\n  }\n\n  /**\n   * Gets the connection's target neuron.\n   */\n  public get target(): number {\n    return this._target;\n  }\n\n  /**\n   * Gets the connection's weight.\n   */\n  public get weight(): number {\n    return this._weight;\n  }\n\n  /**\n   * Creates a random connection.\n   * @param neuronCount Number of neurons in the network.\n   * @returns A random connection.\n   */\n  public static random(neuronCount: number): Connection {\n    return new Connection(\n        Math.floor(Math.random() * 65536), Math.floor(Math.random() * neuronCount),\n        Math.floor(Math.random() * neuronCount));\n  }\n\n  /**\n   * Creates a connection from a 32 bits number.\n   * @param u32 The 32 bits number to create the connection from.\n   * @returns The connection.\n   */\n  public static fromU32(u32: number): Connection {\n    return new Connection(Connection.normalizeWeight(u32 >> 16), (u32 >> 8) & 0xFF, u32 & 0xFF);\n  }\n\n  /**\n   * Converts the connection to 32 bits number.\n   * @returns The connection as 32 bits number.\n   */\n  public toU32(): number {\n    return (Connection.denormalizeWeight(this._weight) << 16) | (this._source << 8) | this._target;\n  }\n\n  /**\n   * Normalizes the connection's weight.\n   * @param weight The denormalized connection's weight.\n   * @returns The normalized connection's weight.\n   */\n  private static normalizeWeight(weight: number): number {\n    weight = Math.min(Math.max(weight, 0), 65535);\n    return ((weight / 65535) * 2.0 - 1.0) * Connection.WeightAmplitude;\n  }\n\n  /**\n   * Denormalizes the connection's weight.\n   * @param weight The normalized connection's weight.\n   * @returns The denormalized connection's weight.\n   */\n  private static denormalizeWeight(weight: number): number {\n    return ((weight / this.WeightAmplitude) + 1.0) * 65535;\n  }\n}","import {CommandQueue} from '../gl';\nimport {Color, Vec2} from '../math';\nimport {Connection} from './connection';\n\n/**\n * Neural network implementation.\n */\nexport class Network {\n  /** Neural network neurons. */\n  private _neurons: number[];\n\n  /** Input neurons. */\n  private _inputs: number[];\n\n  /** Output neurons. */\n  private _outputs: number[];\n\n  /** Neural network swap neurons. */\n  private _swapNeurons: number[];\n\n  /** Neural network connections. */\n  private _connections: Connection[];\n\n  /**\n   * @param neuronCount Number of neurons in the network.\n   * @param connections The connections in the network.\n   */\n  public constructor(neuronCount: number, connections: Connection[]) {\n    this._neurons = new Array(neuronCount).fill(0);\n    this._swapNeurons = new Array(neuronCount).fill(0);\n    this._connections = connections;\n    this._inputs = [];\n    this._outputs = [];\n  }\n\n  /**\n   * Sets the value of a neuron.\n   * @param index Index of the neuron to set.\n   * @param value Value to set the neuron to.\n   */\n  public set(index: number, value: number): void {\n    this._neurons[index] = value;\n  }\n\n  /**\n   * Gets the value of a neuron.\n   * @param index Index of the neuron to get.\n   * @returns Neuron value.\n   */\n  public get(index: number): number {\n    return this._neurons[index];\n  }\n\n  /**\n   * Marks a neuron as an input for drawing.\n   * @param index Index of the neuron to mark as an input.\n   */\n  public markInput(index: number): void {\n    this._inputs.push(index);\n  }\n\n  /**\n   * Marks a neuron as an output for drawing.\n   * @param index Index of the neuron to mark as an output.\n   */\n  public markOutput(index: number): void {\n    this._outputs.push(index);\n  }\n\n  /**\n   * Resets the network.\n   */\n  public reset(): void {\n    this._neurons.fill(0);\n  }\n\n  /**\n   * Updates the network's neurons.\n   */\n  public update(): void {\n    for (let i = 0; i < this._connections.length; i++) this._connections[i].update(this._neurons, this._swapNeurons);\n    for (let i = 0; i < this._neurons.length; i++) {\n      this._neurons[i] = Network.sigmoid(this._swapNeurons[i]);\n      this._swapNeurons[i] = 0;\n    }\n  }\n\n  /**\n   * Draws the neural network.\n   * @param queue Command queue to draw the network with.\n   * @param translation Where to draw the network.\n   * @param velocity Velocity of the network.\n   * @param scale The scale to draw the network at.\n   */\n  public draw(queue: CommandQueue, translation: Vec2, velocity: Vec2, scale: number): void {\n    const CIRCLE_RADIUS = scale * 0.5;\n    const NEURON_RADIUS = scale * 0.1;\n    const CONNECTION_THICKNESS = NEURON_RADIUS * 1;\n\n    // Draw all connections in the network.\n    for (let i = 0; i < this._connections.length; i++) {\n      const connection = this._connections[i];\n      const from = translation.add(Vec2.new(\n          Math.cos(connection.source / this._neurons.length * Math.PI * 2) * (CIRCLE_RADIUS - NEURON_RADIUS),\n          Math.sin(connection.source / this._neurons.length * Math.PI * 2) * (CIRCLE_RADIUS - NEURON_RADIUS)));\n      const to = translation.add(Vec2.new(\n          Math.cos(connection.target / this._neurons.length * Math.PI * 2) * (CIRCLE_RADIUS - NEURON_RADIUS) ,\n          Math.sin(connection.target / this._neurons.length * Math.PI * 2) * (CIRCLE_RADIUS - NEURON_RADIUS)));\n      const color = connection.weight > 0 ? Color.black().mix(Color.new(1, 0, 0), connection.weight / 10) :\n                                            Color.new(0, 0, 1).mix(Color.black(), -connection.weight / 10);\n      queue.drawMovingArrow(from, to, CONNECTION_THICKNESS, color, velocity, velocity);\n    }\n\n    // Draw all neurons in the network.\n    for (let i = 0; i < this._neurons.length; i++) {\n      const position = translation.add(Vec2.new(\n          Math.cos(i / this._neurons.length * Math.PI * 2) * CIRCLE_RADIUS,\n          Math.sin(i / this._neurons.length * Math.PI * 2) * CIRCLE_RADIUS));\n      const color = Color.black().mix(Color.white(), this._neurons[i]);\n      let borderColor;\n      if (this._inputs.indexOf(i) >= 0)\n        borderColor = Color.new(0, 1, 0);\n      else if (this._outputs.indexOf(i) >= 0)\n        borderColor = Color.new(0, 0, 1);\n      else\n        borderColor = Color.new(1, 1, 1);\n      queue.drawMovingCircle(position, NEURON_RADIUS, borderColor, velocity);\n      queue.drawMovingCircle(position, NEURON_RADIUS * 0.9, color, velocity);\n    }\n  }\n\n  /**\n   * The sigmoid function.\n   * @param x Value to apply the sigmoid function to.\n   * @returns The sigmoid value of the input.\n   */\n  private static sigmoid(x: number): number {\n    return 1 / (1 + Math.exp(-x));\n  }\n}\n","import {Genome} from './genome';\nimport {Genotype} from './genotype';\n\n/**\n * Represents a population of genotypes.\n */\nexport class Population {\n  /** The genome of the population. */\n  private _genome: Genome;\n\n  /** The genotypes in the population. */\n  private _genotypes: Genotype[];\n\n  /** The mutation rate. */\n  private _mutationRate: number;\n\n  /**\n   * @param genome The genome of the population.\n   * @param genotypes The genotypes of the population.\n   * @param mutationRate The mutation rate.\n   */\n  public constructor(genome: Genome, genotypes: Genotype[], mutationRate: number) {\n    if (genotypes.length % 2 !== 0) throw new Error('The number of genotypes in a population must be even.');\n    this._genome = genome;\n    this._genotypes = genotypes;\n    this._mutationRate = mutationRate;\n  }\n\n  /**\n   * Creates a new random population.\n   * @param genome The genome of the population.\n   * @param genotypeCount The number of genotypes in the population.\n   * @param mutationRate The mutation rate.\n   */\n  public static random(genome: Genome, genotypeCount: number, mutationRate: number): Population {\n    let genotypes = new Array<Genotype|null>(genotypeCount).fill(null).map(() => Genotype.random(genome));\n    return new Population(genome, genotypes, mutationRate);\n  }\n\n  /**\n   * Gets the population's genotypes.\n   */\n  public get genotypes(): Genotype[] {\n    return this._genotypes;\n  }\n\n  /**\n   * Selects the parents of the next generation.\n   * @parma fitness The fitness of the population.\n   * @returns The indices of the parents.\n   */\n  public select(fitness: number[]): number[] {\n    let sortedFitness = fitness.map((f, i) => [f, i]).sort(([a, _1], [b, _2]) => b - a);\n    let parents = new Array<number>(this._genotypes.length);\n    for (let i = 0; i < parents.length / 2; i++) {\n      parents[2 * i + 0] = sortedFitness[i][1];\n      parents[2 * i + 1] = sortedFitness[i][1];\n    }\n    return parents;\n  }\n\n  /**\n   * Creates a new population from this one, by making the genotypes reproduce.\n   * @param parents The indices of the parents of the new population.\n   * @returns A new population.\n   */\n  public breed(parents: number[]): Population {\n    let newGenotypes = new Array<Genotype|null>(this._genotypes.length)\n                           .fill(null)\n                           .map((_, i) => this._genotypes[parents[i]].mutate(this._mutationRate));\n    return new Population(this._genome, newGenotypes, this._mutationRate);\n  }\n}\n","import {Vec2} from '../math';\n\n/**\n * Represents a collision manifold.\n */\nexport class Manifold {\n  /** The normal of the collision. */\n  public normal: Vec2;\n\n  /** The penetration depth of the collision. */\n  public penetration: number;\n\n  /**\n   * @param normal The normal of the collision.\n   * @param penetration The penetration depth of the collision.\n   */\n  public constructor(normal: Vec2, penetration: number) {\n    this.normal = normal;\n    this.penetration = penetration;\n  }\n}\n\n/**\n * Represents a generic collider.\n */\nexport interface Collider {\n  /**\n   * Checks if the collider is colliding with another collider.\n   * @param other The other collider.\n   * @returns Collision manifold if colliding, otherwise null.\n   */\n  colliding(other: Collider): Manifold|null;\n}\n\n/**\n * Represents a circle collider.\n */\nexport class CircleCollider implements Collider {\n  /** The position of the circle. */\n  public position: Vec2;\n\n  /** The radius of the circle. */\n  public radius: number;\n\n  /**\n   * @param position The position of the circle.\n   * @param radius The radius of the circle.\n   */\n  public constructor(position: Vec2, radius: number) {\n    this.position = position;\n    this.radius = radius;\n  }\n\n  // Collision detection.\n  public colliding(other: Collider): Manifold|null {\n    if (other instanceof CircleCollider) {  // Circle vs Circle\n      const offset = other.position.sub(this.position);\n      const distanceSquared = offset.lengthSquared();\n      const radiusSum = this.radius + other.radius;\n\n      // Check if the circles are colliding\n      if (distanceSquared > radiusSum * radiusSum) return null;\n\n      // Get the collision manifold\n      const normal = offset.normalize();\n      const penetration = radiusSum - Math.sqrt(distanceSquared);\n      return new Manifold(normal, penetration);\n    } else {\n      const manifold = other.colliding(this);\n      manifold?.normal.mul(-1.0);\n      return manifold;\n    }\n  }\n}\n\n/**\n * Represents a AABB collider.\n */\nexport class AABBCollider implements Collider {\n  /** The top left corner of the rectangle. */\n  public start: Vec2;\n\n  /** The bottom right corner of the rectangle. */\n  public end: Vec2;\n\n  /**\n   * @param start The top right corner of the rectangle.\n   * @param end The bottom left corner of the rectangle.\n   */\n  public constructor(start: Vec2, end: Vec2) {\n    this.start = start.max(end);\n    this.end = start.min(end);\n  }\n\n  // Collision detection.\n  public colliding(other: Collider): Manifold|null {\n    if (other instanceof AABBCollider) {\n      // AABB vs AABB\n      throw new Error('AABB vs AABB not implemented');\n    } else if (other instanceof CircleCollider) {\n      // AABB vs Circle\n      const halfExtents = this.start.sub(this.end).div(2);\n      const center = this.start.add(this.end).div(2);\n      const clamped = other.position.sub(center).clamp(halfExtents.mul(-1), halfExtents);\n      const closest = clamped.add(center);\n      const offset = closest.sub(other.position);\n      if (offset.lengthSquared() > other.radius * other.radius) return null;\n      const normal = offset.normalize();\n      const penetration = other.radius - offset.length();\n      return new Manifold(normal, penetration);\n    } else {\n      const manifold = other.colliding(this);\n      manifold?.normal.mul(-1.0);\n      return manifold;\n    }\n  }\n}\n\n/**\n * Group of colliders.\n */\nexport class GroupCollider implements Collider {\n  /** The colliders in the group. */\n  private _colliders: Collider[];\n\n  /**\n   * @param colliders The colliders in the group.\n   */\n  public constructor(colliders: Collider[]) {\n    this._colliders = colliders;\n  }\n\n  // Collision detection.\n  public colliding(other: Collider): Manifold|null {\n    for (const collider of this._colliders) {\n      const manifold = collider.colliding(other);\n      if (manifold) return manifold;\n    }\n    return null;\n  }\n}\n","import {CommandQueue} from '../gl';\nimport {Color, Vec2} from '../math';\nimport {StaticBody} from './body';\nimport {CircleCollider, Collider} from './collider';\n\n/** The food radius. */\nconst FOOD_RADIUS = 0.02;\n\n/** The food color. */\nconst FOOD_COLOR = Color.new(0.2, 0.9, 0.4);\n\n/**\n * Represents a bullet.\n */\nexport class Food extends StaticBody {\n  /** The food's radius. */\n  public static readonly Radius = FOOD_RADIUS;\n\n  /**\n   * @param position The position of the food.\n   */\n  public constructor(position: Vec2) {\n    super(position);\n  }\n\n  /**\n   * Gets the collider used.\n   */\n  public override get collider(): Collider {\n    return new CircleCollider(this.position, FOOD_RADIUS);\n  }\n\n  // Draws the food.\n  public override draw(queue: CommandQueue): void {\n    queue.drawCircle(this.position, FOOD_RADIUS, FOOD_COLOR);\n  }\n}\n","import {Genome, Population} from '../evo';\nimport {CommandQueue} from '../gl';\nimport {Color, Vec2} from '../math';\nimport {CircleCollider} from './collider';\nimport {Creature} from './creature';\nimport {Food} from './food';\n\n/** The simulation time step. */\nexport const TIME_STEP = 1.0 / 30.0;\n\n/** The boundaries radius. */\nexport const BOUNDARY_RADIUS = 12.0;\nexport const BOUNDARY_THICKNESS = 0.05;\n\n/**\n * The settings for the stage.\n */\nexport class StageSettings {\n  public population: number;\n  public mutationRate: number;\n  public eyeCount: number;\n  public minExtraNeuronCount: number;\n  public maxExtraNeuronCount: number;\n  public minConnectionCount: number;\n  public maxConnectionCount: number;\n  public initialFoodCount: number;\n  public newFoodRate: number;\n  public roundDuration: number;\n};\n\n/**\n * Represents the simulation's stage, where the creatures are tested.\n */\nexport class Stage {\n  /** The stage settings. */\n  private _settings: StageSettings;\n\n  /** The genome of the creatures. */\n  private _genome: Genome;\n\n  /** The population of creatures. */\n  private _population: Population;\n\n  /** The creatures in the stage. */\n  private _creatures: Creature[];\n\n  /** The food in the simulation. */\n  private _food: Food[];\n\n  /** The amount of food to generate. */\n  private _newFoodAccumulator: number;\n\n  /** The time that has passed since the beginning of the round. */\n  private _time: number;\n\n  /**\n   * @param settings The settings for the stage.\n   */\n  public constructor(settings: StageSettings) {\n    this._settings = settings;\n    this._genome = new Genome(\n        Creature.getNeuronCount(settings.eyeCount, settings.minExtraNeuronCount),\n        Creature.getNeuronCount(settings.eyeCount, settings.maxExtraNeuronCount), settings.minConnectionCount,\n        settings.maxConnectionCount);\n    this._population = Population.random(this._genome, settings.population, settings.mutationRate);\n\n    this._creatures = [];\n    this._food = [];\n\n    // Start the first round.\n    this.startRound();\n  }\n\n  /**\n   * Starts a new round.\n   */\n  public startRound(): void {\n    if (this._creatures.length !== 0) {\n      // Select the best creatures from the previous round.\n      let fitness = this._creatures.map(creature => creature.fitness);\n      let parents = this._population.select(fitness);\n      this._population = this._population.breed(parents);\n    }\n\n    // Create the creatures.\n    this._creatures = this._population.genotypes.map(genotype => {\n      let position = this.randomPosition(Creature.Radius);\n      let color = Color.random();\n      return new Creature(this._settings.eyeCount, genotype, position, position, color);\n    });\n\n    // Create the food.\n    this._food = [];\n    for (let i = 0; i < this._settings.initialFoodCount; i++)\n      this._food.push(new Food(this.randomPosition(Food.Radius)));\n    this._newFoodAccumulator = 0;\n    this._time = 0;\n  }\n\n  /**\n   * Updates the stage.\n   * @returns Whether the round is over.\n   */\n  public update(): boolean {\n    // Check if the round ended.\n    if (this._food.length === 0 || this._time > this._settings.roundDuration) {\n      for (const creature of this._creatures) creature.velocity = Vec2.ZERO;\n      return true;\n    }\n\n    this._time += TIME_STEP;\n\n    // Add new food.\n    this._newFoodAccumulator += TIME_STEP * this._settings.newFoodRate;\n    while (this._newFoodAccumulator >= 1) {\n      this._newFoodAccumulator -= 1;\n      this._food.push(new Food(this.randomPosition(Food.Radius)));\n    }\n\n    // Update the creatures.\n    this._creatures.forEach(creature => creature.update(this.getClosestFood(creature.position), TIME_STEP));\n    this._creatures.forEach(creature => creature.position = creature.position.add(creature.velocity.mul(TIME_STEP)));\n\n    // Test for collisions between creatures and the bounds.\n    this._creatures.forEach(creature => {\n      if (creature.position.lengthSquared() > (BOUNDARY_RADIUS - Creature.Radius) ** 2) {\n        creature.position = creature.position.normalize();\n        creature.velocity = creature.velocity.reflect(creature.position);\n        creature.position = creature.position.mul(BOUNDARY_RADIUS - Creature.Radius);\n      }\n    });\n\n    // Test for collisions between creatures and food.\n    this._creatures.forEach(creature => {\n      for (let i = this._food.length - 1; i >= 0; i--)\n        if (creature.collider.colliding(this._food[i].collider)) {\n          creature.fitness += 1;\n          this._food.splice(i, 1);\n        }\n    });\n\n    // Round is not over.\n    return false;\n  }\n\n  /**\n   * Draws the stage.\n   * @param queue The command queue to draw to.\n   */\n  public draw(queue: CommandQueue): void {\n    queue.drawCircle(Vec2.ZERO, BOUNDARY_RADIUS + BOUNDARY_THICKNESS, Color.new(0.0, 0.0, 0.0));\n    queue.drawCircle(Vec2.ZERO, BOUNDARY_RADIUS, Color.new(0.3, 0.6, 0.9));\n    this._food.forEach(food => food.draw(queue));\n    this._creatures.forEach(creature => creature.draw(queue));\n  }\n\n  /**\n   * Picks a creature from a position.\n   * @param position The position to pick from.\n   * @returns The creature, or null if none was found.\n   */\n  public pickCreature(position: Vec2): Creature|null {\n    for (const creature of this._creatures)\n      if (creature.collider.colliding(new CircleCollider(position, 0.00001))) return creature;\n    return null;\n  }\n\n  /**\n   * Gets the best creature in the stage.\n   * @returns The best creature, or null if none was found.\n   */\n  public getBestCreature(): Creature|null {\n    if (this._creatures.length === 0) return null;\n    let best = this._creatures[0];\n    for (const creature of this._creatures)\n      if (creature.fitness > best.fitness) best = creature;\n    return best;\n  }\n\n  /**\n   * Generates a random position within the stage.\n   * @param radius The minimum distance from the edge.\n   * @return The random position.\n   */\n  private randomPosition(radius: number): Vec2 {\n    const distance = Math.sqrt(Math.random() * (BOUNDARY_RADIUS - radius) ** 2);\n    const angle = Math.random() * Math.PI * 2;\n    return Vec2.fromAngle(angle).mul(distance);\n  }\n\n  /**\n   * Gets the closest food to a position.\n   * @param position The position.\n   * @return The closest food.\n   */\n  private getClosestFood(position: Vec2): Food|null {\n    let closestFood: Food|null = null;\n    let closestDistance = Infinity;\n    this._food.forEach(food => {\n      const distance = position.sub(food.position).length();\n      if (distance < closestDistance) {\n        closestFood = food;\n        closestDistance = distance;\n      }\n    });\n    return closestFood;\n  }\n}\n","export {Button} from './button';\nexport {Display} from './display';\nexport {Form} from './form';\nexport {FormChain} from './form-chain';\nexport {Input} from './input';\nexport {LoadingScreen} from './loading-screen';\nexport {Range} from './range';\nexport {Slider} from './slider';\nexport {Switch} from './switch';\nexport {Toggle} from './toggle';\n","/**\n * Represents a UI button.\n */\nexport class Button {\n  /** The DOM element that represents the button. */\n  protected readonly _element: HTMLButtonElement;\n\n  /** The on click callbacks. */\n  private _onClick: Set<() => void>;\n\n  /**\n   * @param element The DOM element that represents the button.\n   */\n  private constructor(element: HTMLButtonElement) {\n    this._element = element;\n    this._onClick = new Set<() => void>();\n    this._element.addEventListener('click', () => {\n      this._onClick.forEach(callback => callback());\n    });\n  }\n\n  /**\n   * Creates a new button from an element.\n   * @param element The element.\n   * @return The button.\n   */\n  public static fromElement(element: Element): Button|null {\n    if (element instanceof HTMLButtonElement)\n      return new Button(element);\n    else\n      return null;\n  }\n\n  /**\n   * Creates a new button from a query selector to find the element.\n   * @param root The root element.\n   * @param selector The query selector.\n   * @return The button.\n   */\n  public static fromSelector(root: Element, selector: string): Button|null {\n    const element = root.querySelector(selector);\n    if (element)\n      return Button.fromElement(element);\n    else\n      return null;\n  }\n\n  /**\n   * Adds a callback to the on click callback set.\n   * @param callback The callback to add.\n   */\n  public addOnClickCallback(callback: () => void): void {\n    this._onClick.add(callback);\n  }\n\n  /**\n   * Removes a callback from the on click callback set.\n   * @param callback The callback to remove.\n   */\n  public removeOnClickCallback(callback: () => void): void {\n    this._onClick.delete(callback);\n  }\n\n  /**\n   * Clears the on click callback set.\n   */\n  public clearOnClickCallbacks(): void {\n    this._onClick.clear();\n  }\n\n  /**\n   * Gets the DOM element that represents the button.\n   */\n  public get element(): HTMLButtonElement {\n    return this._element;\n  }\n}","/**\n * Used to display a single value.\n */\nexport class Display {\n  /** Display root element. */\n  private _element: HTMLElement;\n\n  /** Display DOM element. */\n  private _display: HTMLElement;\n\n  /**\n   * @param element DOM element to display value in.\n   */\n  public constructor(element: HTMLElement) {\n    this._element = element;\n    this._display = this._element.querySelector('span')!;\n  }\n\n  /**\n   * Creates a display from a DOM element.\n   * @param element DOM element to display value in.\n   * @returns Display instance.\n   */\n  public static fromElement(element: HTMLElement): Display|null {\n    if (element.classList.contains('display'))\n      return new Display(element);\n    else\n      return null;\n  }\n\n  /**\n   * Creates a display from a query selector.\n   * @param root Root element to search from.\n   * @param selector Query selector to find display in.\n   * @returns Display instance.\n   */\n  public static fromSelector(root: HTMLElement, selector: string): Display|null {\n    const element = root.querySelector(selector);\n    if (element && element instanceof HTMLDivElement)\n      return Display.fromElement(element);\n    else\n      return null;\n  }\n\n  /**\n   * Sets the value to display.\n   */\n  public set value(value: number) {\n    this._display.innerText = value.toString();\n  }\n\n  /**\n   * Gets the value to display.\n   */\n  public get value(): number {\n    return parseFloat(this._display.innerText);\n  }\n\n  /**\n   * Sets the display's visibility.\n   */\n  public set visible(visible: boolean) {\n    this._element.classList.toggle('hidden', !visible);\n  }\n\n  /**\n   * Gets the display's visibility.\n   */\n  public get visible(): boolean {\n    return !this._element.classList.contains('hidden');\n  }\n}","import {Button} from './button';\nimport {Input} from './input';\nimport {Range} from './range';\nimport {Slider} from './slider';\nimport {Switch} from './switch';\nimport {Toggle} from './toggle';\n\n/**\n * Represents a form.\n */\nexport class Form {\n  /** The form element. */\n  private _element: HTMLDivElement;\n\n  /** The inputs on the form. */\n  private _inputs: Map<string, Input<any>>;\n\n  /** The cancel button. */\n  private _cancelButton: Button|null;\n\n  /** The submit button. */\n  private _submitButton: Button;\n\n  /** The on cancel callback. */\n  private _onCancelCallback: () => void;\n\n  /** The on submit callback. */\n  private _onSubmitCallback: () => void;\n\n  /**\n   * @param element The form element.\n   * @param inputs The inputs on the form.\n   */\n  public constructor(element: HTMLDivElement, inputs: Map<string, Input<any>>) {\n    this._element = element;\n    this._inputs = inputs;\n    this._cancelButton = Button.fromSelector(this._element, 'button#cancel');\n    const submit = Button.fromSelector(this._element, 'button#submit');\n    if (!submit) throw new Error('Submit button not found on form.');\n    this._submitButton = submit;\n    this._onCancelCallback = () => {};\n    this._onSubmitCallback = () => {};\n    if (this._cancelButton) this._cancelButton.addOnClickCallback(this.cancel.bind(this));\n    this._submitButton.addOnClickCallback(this.submit.bind(this));\n  }\n\n  /**\n   * Creates a new form from an element.\n   * @param element The element.\n   * @return The form.\n   */\n  public static fromElement(element: Element): Form|null {\n    if (!(element instanceof HTMLDivElement) || !element.classList.contains('form')) return null;\n\n    // Get all inputs on the form.\n    const inputs = new Map<string, Input<any>>();\n    Range.fromChildren(element).forEach(([id, r]) => inputs.set(id, r));\n    Slider.fromChildren(element).forEach(([id, s]) => inputs.set(id, s));\n    Switch.fromChildren(element).forEach(([id, s]) => inputs.set(id, s));\n    Toggle.fromChildren(element).forEach(([id, t]) => inputs.set(id, t));\n    return new Form(element, inputs);\n  }\n\n  /**\n   * Creates a new form from a query selector to find the element.\n   * @param selector The query selector.\n   * @return The form.\n   */\n  public static fromSelector(selector: string): Form|null {\n    const root = document.querySelector('body>div#forms');\n    if (!root) throw new Error('Couldn\\'t find forms root element.');\n    const element = root.querySelector(selector) as HTMLDivElement;\n    if (element)\n      return Form.fromElement(element);\n    else\n      return null;\n  }\n\n  /**\n   * Creates new forms from the children of a root element.\n   * @param root The root element.\n   * @returns The forms.\n   */\n  public static fromChildren(root: Element): [string, Form][] {\n    return Array.from(root.children)\n               .map(e => [e.id, Form.fromElement(e)])\n               .filter(t => t[1] !== null) as [string, Form][];\n  }\n\n  /**\n   * Sets the callback for when the form is canceled.\n   * @param callback The callback.\n   */\n  public setOnCancel(callback: () => void): void {\n    this._onCancelCallback = callback;\n  }\n\n  /**\n   * Sets the callback for when the form is submitted.\n   * @param callback The callback.\n   */\n  public setOnSubmit(callback: () => void): void {\n    this._onSubmitCallback = callback;\n  }\n\n  /**\n   * Checks if the form is visible.\n   */\n  public get visible(): boolean {\n    return !this._element.classList.contains('hidden');\n  }\n\n  /**\n   * Sets the visibility of the form.\n   */\n  public set visible(value: boolean) {\n    this._element.classList.toggle('hidden', !value);\n  }\n\n  /**\n   * Cancels the form.\n   */\n  public cancel(): void {\n    this.visible = false;\n    this._onCancelCallback();\n  }\n\n  /**\n   * Submits the form.\n   */\n  public submit(): void {\n    this.visible = false;\n    this._onSubmitCallback();\n  }\n\n  /**\n   * Gets an input from the form.\n   * @param name The name of the input.\n   * @return The input.\n   */\n  public get(name: string): Input<any>|null {\n    return this._inputs.get(name) ?? null;\n  }\n\n  /**\n   * Gets an iterator over the inputs on the form.\n   */\n  public get inputs(): IterableIterator<[string, Input<any>]> {\n    return this._inputs.entries();\n  }\n}\n","import {Input} from './input';\n\ntype RangeType = 'integer';\n\n/**\n * Implements an input range.\n */\nexport class Range extends Input<[number, number]> {\n  /** The track element. */\n  private _track: HTMLDivElement;\n\n  /** The left thumb wrapper element. */\n  private _leftThumbWrapper: HTMLDivElement;\n\n  /** The left thumb element. */\n  private _leftThumb: HTMLButtonElement;\n\n  /** The right thumb wrapper element. */\n  private _rightThumbWrapper: HTMLDivElement;\n\n  /** The right thumb element. */\n  private _rightThumb: HTMLButtonElement;\n\n  /** The display element. */\n  private _display: HTMLElement;\n\n  /** The minimum value. */\n  private _min: number;\n\n  /** The maximum value. */\n  private _max: number;\n\n  /** The step value. */\n  private _step: number;\n\n  /** The range's type. */\n  private _type: RangeType;\n\n  /** Is the mouse down? */\n  private _mouseDown: 'left'|'right'|null;\n\n  /**\n   * @param element The DOM element that represents the slider.\n   */\n  public constructor(element: HTMLDivElement) {\n    // Get attributes.\n    let min = parseFloat(element.getAttribute('min') ?? '1');\n    if (min !== min) min = 1;\n    let max = parseFloat(element.getAttribute('max') ?? '100');\n    if (max !== max) max = 100;\n    [min, max] = [Math.min(min, max), Math.max(min, max)];\n    let step = parseFloat(element.getAttribute('step') ?? '1');\n    if (step !== step) step = 1;\n    const type = element.getAttribute('type') ?? 'integer';\n    if (type != 'integer') throw new Error(`Invalid range type: ${type}`);\n\n    // Initialize properties.\n    super([min, max]);\n    this._min = min;\n    this._max = max;\n    this._step = step;\n    this._type = type;\n    this._mouseDown = null;\n\n    // Init track and thumb.\n    this._track = element.querySelector('div') as HTMLDivElement;\n    this._leftThumbWrapper = this._track.querySelector('div.left') as HTMLDivElement;\n    this._leftThumb = this._leftThumbWrapper.querySelector('button') as HTMLButtonElement;\n    this._leftThumb.addEventListener('mousedown', () => this._mouseDown = 'left');\n    this._rightThumbWrapper = this._track.querySelector('div.right') as HTMLDivElement;\n    this._rightThumb = this._rightThumbWrapper.querySelector('button') as HTMLButtonElement;\n    this._rightThumb.addEventListener('mousedown', () => this._mouseDown = 'right');\n\n    document.addEventListener('mouseup', () => this._mouseDown = null);\n    document.addEventListener('mousemove', (e: MouseEvent) => {\n      if (this._mouseDown === 'left') {\n        const rect = this._track.getBoundingClientRect();\n        const delta = Math.max(0, Math.min(1, (e.clientX - rect.left) / rect.width));\n        if (this._type === 'integer')\n          this.value =\n              [Math.min(Math.round(this._min + delta * (this._max - this._min)), this.value[1]), this.value[1]];\n      } else if (this._mouseDown === 'right') {\n        const rect = this._track.getBoundingClientRect();\n        const delta = Math.max(0, Math.min(1, (e.clientX - rect.left) / rect.width));\n        if (this._type === 'integer')\n          this.value =\n              [this.value[0], Math.max(this.value[0], Math.round(this._min + delta * (this._max - this._min)))];\n      }\n    });\n\n    // Init input element.\n    this._display = element.querySelector('span#display') as HTMLElement;\n    this.updateDisplay();\n  }\n\n  /**\n   * Creates a new range from an element.\n   * @param element The element.\n   * @returns The range.\n   */\n  public static fromElement(element: Element): Range|null {\n    if (element instanceof HTMLDivElement && element.classList.contains('range'))\n      return new Range(element);\n    else\n      return null;\n  }\n\n  /**\n   * Creates a new range from a query selector to find the element.\n   * @param root The root element.\n   * @param selector The query selector.\n   * @returns The slider.\n   */\n  public static fromSelector(root: Element, selector: string): Range|null {\n    const element = root.querySelector(selector);\n    if (element)\n      return Range.fromElement(element);\n    else\n      return null;\n  }\n\n  /**\n   * Creates new sliders from the children of a root element.\n   * @param root The root element.\n   * @returns The sliders.\n   */\n  public static fromChildren(root: Element): [string, Range][] {\n    return Array.from(root.children)\n               .map(e => [e.id, Range.fromElement(e)])\n               .filter(([_, s]) => s !== null) as [string, Range][];\n  }\n\n  // Validate the value.\n  protected override validate(value: [number, number]): [number, number] {\n    // Fix to step.\n    value = [Math.round(value[0] / this._step) * this._step, Math.round(value[1] / this._step) * this._step];\n    if (this._type === 'integer') value = [Math.round(value[0]), Math.round(value[1])];\n    value = [Math.max(this._min, value[0]), Math.max(value[0], Math.min(this._max, value[1]))];\n    return value;\n  }\n\n  // Update the range display.\n  protected override updateDisplay(): void {\n    if (this._type === 'integer') this._display.innerText = this.value.join(' - ');\n    let delta = this.value.map(v => (v - this._min) / (this._max - this._min));\n    this._leftThumbWrapper.style.transform = `translateX(${delta[0] * 100}%)`;\n    this._rightThumbWrapper.style.transform = `translateX(${delta[1] * 100}%)`;\n  }\n}","/**\n * Represents an input element which can be used to get a value from the user.\n * @tparam Type The type of the value.\n */\nexport abstract class Input<Type> {\n  /** The current value. */\n  private _value: Type;\n\n  /** The on value changed callbacks. */\n  private _onValueChanged: Set<(value: Type) => void>;\n\n  /**\n   * @param initial The initial value.\n   */\n  protected constructor(initial: Type) {\n    this._value = initial;\n    this._onValueChanged = new Set<(value: Type) => void>();\n  }\n\n  /**\n   * Gets the value of the input.\n   */\n  public get value(): Type {\n    return this._value;\n  }\n\n  /**\n   * Sets the value of the input.\n   */\n  set value(value: Type) {\n    const newValue = this.validate(value);\n    if (newValue === this._value) return;\n    this._value = newValue;\n    this.updateDisplay();\n    this._onValueChanged.forEach(callback => callback(this._value));\n  }\n\n  /**\n   * Validates the value of the input.\n   * @param value The value to validate.\n   * @return The validated value.\n   */\n  protected abstract validate(value: Type): Type;\n\n  /**\n   * Updates the display of the input.\n   */\n  protected abstract updateDisplay(): void;\n\n  /**\n   * Adds a callback to be called when the value of the input changes.\n   * @param callback The callback.\n   */\n  public addOnValueChangedCallback(callback: (value: Type) => void): void {\n    this._onValueChanged.add(callback);\n  }\n\n  /**\n   * Removes a callback from being called when the value of the input changes.\n   * @param callback The callback.\n   */\n  public removeOnValueChangedCallback(callback: (value: Type) => void): void {\n    this._onValueChanged.delete(callback);\n  }\n}\n","import {Input} from './input';\n\ntype SliderType = 'exponential'|'linear'|'integer';\n\n/**\n * Implements an input slider.\n */\nexport class Slider extends Input<number> {\n  /** The track element. */\n  private _track: HTMLDivElement;\n\n  /** The thumb wrapper element. */\n  private _thumbWrapper: HTMLDivElement;\n\n  /** The thumb element. */\n  private _thumb: HTMLButtonElement;\n\n  /** The input element. */\n  private _input: HTMLInputElement;\n\n  /** The minimum value. */\n  private _min: number;\n\n  /** The maximum value. */\n  private _max: number;\n\n  /** The step value. */\n  private _step: number;\n\n  /** The digits shown. */\n  private _digits: number;\n\n  /** The slider's type. */\n  private _type: SliderType;\n\n  /** Is the mouse down? */\n  private _mouseDown: boolean;\n\n  /**\n   * @param element The DOM element that represents the slider.\n   */\n  public constructor(element: HTMLDivElement) {\n    // Get attributes.\n    let min = parseFloat(element.getAttribute('min') ?? '1');\n    if (min !== min) min = 1;\n    let max = parseFloat(element.getAttribute('max') ?? '100');\n    if (max !== max) max = 100;\n    [min, max] = [Math.min(min, max), Math.max(min, max)];\n    let step = parseFloat(element.getAttribute('step') ?? '1');\n    if (step !== step) step = 1;\n    let initial = parseFloat(element.getAttribute('initial') ?? '50');\n    if (initial !== initial) initial = 50;\n    let digits = parseInt(element.getAttribute('digits') ?? '2');\n    if (digits > 3) digits = 3;\n    const type = element.getAttribute('type') ?? 'linear';\n    if (type != 'exponential' && type != 'linear' && type != 'integer') throw new Error(`Invalid slider type: ${type}`);\n\n    if (type === 'exponential' && min <= 0)\n      throw new Error('Exponential sliders must have a minimum value greater than 0.');\n\n    // Initialize properties.\n    super(initial);\n    this._min = min;\n    this._max = max;\n    this._step = step;\n    this._digits = digits;\n    this._type = type;\n    this._mouseDown = false;\n\n    // Init track and thumb.\n    this._track = element.querySelector('div') as HTMLDivElement;\n    this._thumbWrapper = this._track.querySelector('div') as HTMLDivElement;\n    this._thumb = this._thumbWrapper.querySelector('button') as HTMLButtonElement;\n    this._thumb.addEventListener('mousedown', () => this._mouseDown = true);\n    document.addEventListener('mouseup', () => this._mouseDown = false);\n    document.addEventListener('mousemove', (e: MouseEvent) => {\n      if (this._mouseDown) {\n        const rect = this._track.getBoundingClientRect();\n        const delta = Math.max(0, Math.min(1, (e.clientX - rect.left) / rect.width));\n\n        if (this._type == 'exponential')\n          this.value = this._min * Math.pow(10, delta * Math.log10(this._max / this._min));\n        else if (this._type == 'linear')\n          this.value = this._min + delta * (this._max - this._min);\n        else if (this._type == 'integer')\n          this.value = Math.round(this._min + delta * (this._max - this._min));\n      }\n    });\n\n    // Init input element.\n    this._input = element.querySelector('input') as HTMLInputElement;\n    this._input.setAttribute('min', this._min.toString());\n    this._input.setAttribute('min', this._max.toString());\n    this._input.setAttribute('step', this._step.toString());\n    this._input.addEventListener('change', () => this.value = this._input.valueAsNumber);\n\n    this.updateDisplay();\n  }\n\n  /**\n   * Creates a new slider from an element.\n   * @param element The element.\n   * @returns The slider.\n   */\n  public static fromElement(element: Element): Slider|null {\n    if (element instanceof HTMLDivElement && element.classList.contains('slider'))\n      return new Slider(element);\n    else\n      return null;\n  }\n\n  /**\n   * Creates a new slider from a query selector to find the element.\n   * @param root The root element.\n   * @param selector The query selector.\n   * @returns The slider.\n   */\n  public static fromSelector(root: Element, selector: string): Slider|null {\n    const element = root.querySelector(selector);\n    if (element)\n      return Slider.fromElement(element);\n    else\n      return null;\n  }\n\n  /**\n   * Creates new sliders from the children of a root element.\n   * @param root The root element.\n   * @returns The sliders.\n   */\n  public static fromChildren(root: Element): [string, Slider][] {\n    return Array.from(root.children)\n               .map(e => [e.id, Slider.fromElement(e)])\n               .filter(([_, s]) => s !== null) as [string, Slider][];\n  }\n\n  // Validate the value.\n  protected override validate(value: number): number {\n    // Fix to step.\n    if (this._type === 'exponential')\n      value = Math.pow(10, Math.round(Math.log10(value) / this._step) * this._step);\n    else\n      value = Math.round(value / this._step) * this._step;\n    if (this._type === 'integer') value = Math.round(value);\n    return Math.max(this._min, Math.min(this._max, value));\n  }\n\n  // Update the slider display.\n  protected override updateDisplay(): void {\n    let delta;\n    if (this._type === 'exponential')\n      delta = Math.log10(this.value / this._min) / Math.log10(this._max / this._min);\n    else\n      delta = (this.value - this._min) / (this._max - this._min);\n\n    if (this._type === 'integer')\n      this._input.valueAsNumber = this.value;\n    else if (this.value > Math.pow(10.0, -1 - this._digits) && this.value < Math.pow(10.0, 6 - this._digits) || this.value == 0)\n      this._input.value = this.value.toFixed(this._digits);\n    else if (this._digits === 0)\n      this._input.value = this.value.toExponential(0);\n    else\n      this._input.value = this.value.toExponential(this._digits);\n    this._thumbWrapper.style.transform = `translateX(${delta * 100}%)`;\n  }\n}","import {Input} from './input';\nimport {Toggle} from './toggle';\n\n/**\n * Represents a set of UI toggles, of which only one can be activated at a time.\n */\nexport class Switch extends Input<string> {\n  /** The toggles. */\n  private _toggles: Map<string, Toggle>;\n\n  /** Does the switch allow no state? */\n  private _noneState: string|undefined;\n\n  /**\n   * @param toggles The switch toggles.\n   * @param initialState The initial state.\n   * @param noneState The state to use when no toggle is activated. If undefined, no state won't be allowed.\n   */\n  public constructor(toggles: Map<string, Toggle>, initialState: string, noneState: string|undefined = undefined) {\n    super(initialState);\n\n    if (toggles.size === 0) throw new Error('A switch cannot be empty, toggles must be specified.');\n    this._toggles = toggles;\n    this._noneState = noneState;\n\n    // Initialize toggles.\n    this._toggles.forEach((toggle, state) => {\n      // Set the initial state.\n      toggle.value = state === this.value;\n\n      // Add the callback.\n      toggle.addOnValueChangedCallback(value => {\n        if (value)\n          this.value = state;\n        else if (this.value === state && this._noneState !== undefined)\n          this.value = this._noneState;\n        else if (this.value === state)\n          toggle.value = true;  // Since no state isn't allowed, we need to activate the toggle.\n      });\n    });\n  }\n\n  /**\n   * Creates a new switch from an element.\n   * @param element The element.\n   * @return The switch.\n   */\n  public static fromElement(element: Element): Switch|null {\n    if (!(element instanceof HTMLDivElement) || !element.classList.contains('switch')) return null;\n    const toggles = Toggle.fromChildren(element);\n    const noneState = (element.getAttribute('none-state') ?? undefined);\n    const initialState = (element.getAttribute('initial') ?? noneState);\n    if (initialState === undefined) throw new Error('If no initial state is specified, none-state must be specified.');\n    return new Switch(new Map(toggles), initialState, noneState);\n  }\n\n  /**\n   * Creates a new switch from a query selector to find the element.\n   * @param root The root element.\n   * @param selector The query selector.\n   * @return The switch.\n   */\n  public static fromSelector(root: Element, selector: string): Switch|null {\n    const element = root.querySelector(selector);\n    if (element)\n      return Switch.fromElement(element);\n    else\n      return null;\n  }\n\n  /**\n   * Creates new switches from the children of a root element.\n   * @param root The root element.\n   * @returns The switches.\n   */\n  public static fromChildren(root: Element): [string, Switch][] {\n    return Array.from(root.children)\n               .filter(e => e instanceof HTMLDivElement && e.classList.contains('switch'))\n               .map(e => [e.id, Switch.fromElement(e as HTMLDivElement)])\n               .filter(([_, s]) => s !== null) as [string, Switch][];\n  }\n\n  // Validate the state.\n  protected override validate(state: string): string {\n    return state;\n  }\n\n  // Updates the display of the switch.\n  protected override updateDisplay() {\n    this._toggles.forEach((toggle, state) => toggle.value = state === this.value);\n  }\n}","import {Button} from './button';\nimport {Input} from './input';\n\n/**\n * Represents a UI button that toggles a boolean value.\n */\nexport class Toggle extends Input<boolean> {\n  /** The UI button that toggles the value. */\n  private _button: Button;\n\n  /**\n   * @param button The UI button that toggles the value.\n   * @param initial The initial value.\n   */\n  public constructor(button: Button, initial: boolean) {\n    super(initial);\n\n    this._button = button;\n    this._button.addOnClickCallback(() => this.value = !this.value);\n\n    this.updateDisplay();\n  }\n\n  /**\n   * Creates a new toggle from an element.\n   * @param element The element.\n   * @return The toggle.\n   */\n  public static fromElement(element: Element): Toggle|null {\n    if (!element.classList.contains('toggle')) return null;\n    const button = Button.fromElement(element);\n    if (button == null) return null;\n\n    // Get the properties from the attributes.\n    const initial = element.classList.contains('activated');\n    return new Toggle(button, initial);\n  }\n\n  /**\n   * Creates a new toggle from a query selector to find the element.\n   * @param root The root element.\n   * @param selector The query selector.\n   * @return The toggle.\n   */\n  public static fromSelector(root: Element, selector: string): Toggle|null {\n    const element = root.querySelector(selector);\n    if (element)\n      return Toggle.fromElement(element);\n    else\n      return null;\n  }\n\n  /**\n   * Creates new toggles from the children of a root element.\n   * @param root The root element.\n   * @returns The toggles.\n   */\n  public static fromChildren(root: Element): [string, Toggle][] {\n    return Array.from(root.children)\n               .map(e => [e.id, Toggle.fromElement(e)])\n               .filter(([_, t]) => t !== null) as [string, Toggle][];\n  }\n\n  // Validates the value.\n  protected override validate(value: boolean): boolean {\n    return value;\n  }\n\n  // Updates the button display.\n  protected override updateDisplay() {\n    this._button.element.classList.toggle('activated', this.value);\n  }\n}","import {Form} from './form';\nimport {Input} from './input';\n\n/**\n * Represents a chain of forms.\n */\nexport class FormChain {\n  /** The forms in the chain. */\n  private _forms: Form[];\n\n  /** The index of the current form in the chain. */\n  private _currentIndex: number;\n\n  /** The on cancel callback. */\n  private _onCancelCallback: () => void;\n\n  /** The on submit callback. */\n  private _onSubmitCallback: () => void;\n\n  /**\n   * @param forms The forms in the chain.\n   */\n  public constructor(forms: Form[]) {\n    this._forms = forms;\n    this._currentIndex = -1;\n    this._onCancelCallback = () => {};\n    this._onSubmitCallback = () => {};\n\n    // Set callbacks for each form.\n    for (let i = 0; i < this._forms.length; i++) {\n      const form = this._forms[i];\n\n      form.setOnSubmit(() => {\n        if (i == this._forms.length - 1) {\n          this._currentIndex = -1;\n          this._onSubmitCallback();\n        } else\n          this._forms[i + 1].visible = true;\n      });\n\n      form.setOnCancel(() => {\n        if (i == 0) {\n          this._currentIndex = -1;\n          this._onCancelCallback();\n        } else\n          this._forms[i - 1].visible = true;\n      });\n    }\n  }\n\n  /**\n   * Creates a new form chain from an element.\n   * @param element The element.\n   * @return The form chain.\n   */\n  public static fromElement(element: Element): FormChain|null {\n    if (!(element instanceof HTMLDivElement) || !element.classList.contains('form-chain')) return null;\n\n    // Get all forms on the form chain.\n    const forms = Form.fromChildren(element).map(([_, f]) => f);\n    if (forms.length === 0) return null;\n    return new FormChain(forms);\n  }\n\n  /**\n   * Creates a new form chain from a query selector to find the element.\n   * @param selector The query selector.\n   * @return The form chain.\n   */\n  public static fromSelector(selector: string): FormChain|null {\n    const root = document.querySelector('body>div#forms');\n    if (!root) throw new Error('Couldn\\'t find forms root element.');\n    const element = root.querySelector(selector) as HTMLDivElement;\n    if (element)\n      return FormChain.fromElement(element);\n    else\n      return null;\n  }\n\n  /**\n   * Checks if the form chain is visible.\n   */\n  public get visible(): boolean {\n    return this._currentIndex !== -1;\n  }\n\n  /**\n   * Skips to the next form in the chain, by submitting the current form.\n   */\n  public skip() {\n    if (this._currentIndex !== -1) this._forms[this._currentIndex].submit();\n  }\n\n  /**\n   * Sets the visibility of the form chain.\n   */\n  public set visible(value: boolean) {\n    if (value && this._currentIndex === -1) {\n      this._currentIndex = 0;\n      this._forms[this._currentIndex].visible = true;\n    } else if (!value && this._currentIndex !== -1) {\n      this._forms[this._currentIndex].visible = false;\n      this._currentIndex = -1;\n    }\n  }\n\n  /**\n   * Gets an input from the form chain.\n   * @param name The name of the input.\n   * @return The input.\n   */\n  public get<T>(name: string): Input<T>|null {\n    for (const form of this._forms) {\n      const input = form.get(name);\n      if (input !== null) return input as Input<T>;\n    }\n    return null;\n  }\n\n  /**\n   * Gets an iterator over the inputs on the form chain.\n   */\n  public get inputs(): IterableIterator<[string, Input<any>]> {\n    return this._forms.flatMap(form => Array.from(form.inputs)).values();\n  }\n\n  /**\n   * Sets the on cancel callback.\n   * @param callback The callback.\n   */\n  public setOnCancel(callback: () => void) {\n    this._onCancelCallback = callback;\n  }\n\n  /**\n   * Sets the on submit callback.\n   * @param callback The callback.\n   */\n  public setOnSubmit(callback: () => void) {\n    this._onSubmitCallback = callback;\n  }\n}","/**\n * Loading screen implementation.\n */\nexport class LoadingScreen {\n  /** The loading screen element. */\n  private _element: HTMLElement;\n\n  /**\n   * @param element The loading screen element.\n   */\n  public constructor(element: HTMLElement) {\n    this._element = element;\n  }\n\n  /**\n   * Creates a new loading screen from a query selector.\n   * @param selector The selector for the loading screen element.\n   * @return The loading screen.\n   */\n  public static fromSelector(selector: string): LoadingScreen {\n    const element = document.querySelector(selector) as HTMLElement;\n    if (element === null) throw new Error('Loading screen element not found.');\n    return new LoadingScreen(element);\n  }\n\n  /**\n   * Checks if the the loading screen is visible.\n   */\n  public get loading(): boolean {\n    return this._element.style.display === 'block';\n  }\n\n  /**\n   * Shows or hides the loading screen.\n   */\n  public set loading(value: boolean) {\n    if (value)\n      this._element.style.display = 'block';\n    else\n      this._element.style.display = 'none';\n  }\n}"],"names":[],"version":3,"file":"index.e7f05703.js.map","sourceRoot":"/__parcel_source_root/"}